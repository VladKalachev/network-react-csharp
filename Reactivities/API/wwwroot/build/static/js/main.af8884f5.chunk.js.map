{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboad.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activities.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileDescription.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","concat","error","Promise","reject","response","undefined","message","toast","_error$response","status","data","history","push","removeItem","info","method","errors","hasOwnProperty","responseBody","requests","url","get","then","body","post","put","delete","file","formData","FormData","append","Content-type","agent","list","params","details","id","create","activity","update","attend","unattend","username","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","listFollowings","predicate","listActivities","current","login","user","register","setActivityProps","date","Date","isGoing","attendees","some","a","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","getActivity","activityRegistry","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","entries","reduce","toISOString","split","toConsumableArray","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","_this2","set","computed","_this3","activityId","_this4","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","console","log","state","invoke","catch","on","comment","runInAction","comments","_this5","stop","err","_callee","regenerator_default","wrap","_context","prev","next","_this6","t0","_callee2","activitiesEnvelope","_context2","_this7","loadingInitial","axiosParams","sent","userStore","_callee3","_context3","_this8","abrupt","toJS","_this9","_callee4","attendee","_context4","_this10","submitting","_callee5","_context5","_this11","_callee6","event","_context6","_this12","target","currentTarget","name","_callee7","_context7","_this13","loading","_callee8","_context8","_this14","filter","UserStore","userStore_descriptor","userStore_descriptor2","userStore_descriptor3","userStore_descriptor4","userStore_descriptor5","setToken","modalStore","closeModal","CommonStore","commonStore_descriptor","commonStore_descriptor2","commonStore_descriptor3","commonStore_descriptor4","setItem","appLoaded","ModalStore","shallow","modalStore_descriptor","modalStore_descriptor2","modalStore_descriptor3","open","content","modal","ProfileStore","profileStore_descriptor","profileStore_descriptor2","profileStore_descriptor3","profileStore_descriptor4","profileStore_descriptor5","profileStore_descriptor6","profileStore_descriptor7","profileStore_descriptor8","profileStore_descriptor9","profileStore_descriptor10","profileStore_descriptor11","profileStore_descriptor12","profileStore_descriptor13","profileStore_descriptor14","profileStore_descriptor15","profileStore_descriptor16","profileStore_descriptor17","profileStore_descriptor18","activeTab","loadFollowings","followings","loadingActivities","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","isMain","find","objectSpread","following","followersCount","_callee9","profiles","_context9","configure","enforceActions","RootStoreContext","createContext","RootStore","activityStore","profileStore","observer","_rootStore$userStore","useContext","logout","react_default","createElement","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","_ref","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","react_router_dom","Label","basic","color","Icon","format","venue","city","secondary","dashboard_ActivityListItemAttendees","clearing","description","floated","activitiesByDate","react","_ref2","slicedToArray","group","divided","dashboard_ActivityListItem","_rootStore$activitySt","setPredicate","vertical","width","marginTop","attached","active","has","lib","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","Grid","Column","dashboard_ActivityListItemPlaceholder","react_infinite_scroller_default","pageStart","loadMore","hasMore","initialLoad","dashboard_ActivityList","dashboard_ActivityFilters","Loader","TextInput","input","type","placeholder","_ref$meta","meta","touched","Form","Field","assign","ErrorMessage","Message","statusText","length","flat","i","validate","combineValidators","email","isRequired","password","LoginForm","react_final_form_es","onSubmit","defineProperty","FORM_ERROR","render","handleSubmit","submitError","invalid","pristine","dirtySinceLastSubmit","textAlign","component","form_ErrorMessage","RegisterForm","HomePage","isLoggedIn","openModal","className","user_LoginForm","user_RegisterForm","ActivityFormValues","init","category","time","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","_ref$date","_ref$time","rest","objectWithoutProperties","onBlur","onKeyDown","preventDefault","composeValidators","hasLengthGreaterThan","match","loadActivity","createActivity","editActivity","setActivity","_useState3","_useState4","setLoading","finally","initialValues","dateAndTime","dateString","timeString","combineDateAndTime","newActivity","uuid","widths","LoadingComponent","_ref$inverted","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","height","attendActivity","cancelAttendance","padding","ActivityDetailedInfo","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","layout_LoadingComponent","details_ActivityDetailedHeader","details_ActivityDetailedInfo","details_ActivityDetailedChat","details_ActivityDetailedSidebar","NotFound","Inline","_rootStore$modalStore","_rootStore$modalStore2","Modal","onClose","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","react_cropper_default","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","photoUpload_PhotoWidgetDropzone","photoUpload_PhotoWidgetCropper","overflow","_rootStore$profileSto","addPhotoMode","setAddPhotoMode","setTarget","_useState5","_useState6","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","photoUpload_PhotoUploadWidget","Card","itemsPerRow","negative","bio","editMode","setEditMode","profiles_ProfileEditForm","ProfileCard","extra","ProfileFollowings","profiles_ProfileCard","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","profiles_ProfileDescription","profiles_ProfilePhotos","ProfileActivities","profiles_ProfileFollowings","ProfileContent","setActiveTab","menuPosition","loadProfile","profiles_ProfileHeader","profiles_ProfileContent","Component","react_router","props","withRouter","location","_rootStore$commonStor","setAppLoaded","getUser","modals_ModalContainer","react_toastify","path","nav_NavBar","layout_PrivateRoute","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","__webpack_require__","d","__webpack_exports__","src_history","dateFnsLocalizer","createBrowserHistory","ReactDOM","layout_ScrollToTop","layout_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"waAOAA,IAAMC,SAASC,QAAUC,OAEzBH,IAAMI,aAAaC,QAAQC,IAAI,SAACC,GAC5B,IAAMC,EAAQC,OAAOC,aAAaC,QAAQ,OAE1C,OADIH,IAAOD,EAAOK,QAAQC,cAAf,UAAAC,OAAyCN,IAC7CD,GACR,SAAAQ,GACC,OAAOC,QAAQC,OAAOF,KAE1Bf,IAAMI,aAAac,SAASZ,SAAIa,EAAW,SAAAJ,GACjB,kBAAlBA,EAAMK,SAAgCL,EAAMG,UAC9CG,IAAMN,MAAM,6CAFkC,IAAAO,EAINP,EAAMG,SAAxCK,EAJwCD,EAIxCC,OAAQC,EAJgCF,EAIhCE,KAAMjB,EAJ0Be,EAI1Bf,OAAQK,EAJkBU,EAIlBV,QAmB9B,MAlBe,MAAXW,GACFE,GAAQC,KAAK,aAEA,MAAXH,GAAkD,2EAAhCX,EAAQ,sBAC5BH,OAAOC,aAAaiB,WAAW,OAC/BF,GAAQC,KAAK,KACbL,IAAMO,KAAK,iDAGA,MAAXL,GACkB,QAAlBhB,EAAOsB,QACPL,EAAKM,OAAOC,eAAe,OAE3BN,GAAQC,KAAK,aAEA,MAAXH,GACFF,IAAMN,MAAM,oDAERA,EAAMG,WAGhB,8JAAMc,GAAe,SAACd,GAAD,OAA6BA,EAASM,MAKrDS,GACG,SAACC,GAAD,OAAiBlC,IAAMmC,IAAID,GAAKE,KAAKJ,KADxCC,GAEI,SAACC,EAAaG,GAAd,OAA2BrC,IAAMsC,KAAKJ,EAAKG,GAAMD,KAAKJ,KAF1DC,GAGG,SAACC,EAAaG,GAAd,OAA2BrC,IAAMuC,IAAIL,EAAKG,GAAMD,KAAKJ,KAHxDC,GAIG,SAACC,GAAD,OAAiBlC,IAAMwC,OAAON,GAAKE,KAAKJ,KAJ3CC,GAKQ,SAACC,EAAaO,GACpB,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQH,GACjBzC,IAAMsC,KAAKJ,EAAKQ,EAAU,CAC7B9B,QAAS,CAACiC,eAAgB,yBAC3BT,KAAKJ,KAgCDc,GA5BI,CACjBC,KAAM,SAACC,GAAD,OAA2DhD,IAAMmC,IAAI,cAAe,CAACa,OAAQA,IAASZ,KAAKJ,KACjHiB,QAAS,SAACC,GAAD,OAAgBjB,GAAA,eAAAnB,OAA4BoC,KACrDC,OAAQ,SAACC,GAAD,OAAyBnB,GAAc,cAAemB,IAC9DC,OAAQ,SAACD,GAAD,OAAyBnB,GAAA,eAAAnB,OAA4BsC,EAASF,IAAME,IAC5EZ,OAAQ,SAACU,GAAD,OAAgBjB,GAAA,eAAAnB,OAA4BoC,KACpDI,OAAQ,SAACJ,GAAD,OAAgBjB,GAAA,eAAAnB,OAA6BoC,EAA7B,WAA0C,KAClEK,SAAU,SAACL,GAAD,OAAgBjB,GAAA,eAAAnB,OAA4BoC,EAA5B,cAqBbJ,GAZE,CACbX,IAAK,SAACqB,GAAD,OAAyCvB,GAAA,aAAAnB,OAA0B0C,KACxEC,YAAa,SAACC,GAAD,OAAkCzB,GAAA,UAA6ByB,IAC5EC,aAAc,SAACT,GAAD,OAAgBjB,GAAA,WAAAnB,OAAyBoC,EAAzB,YAAuC,KACrEU,YAAa,SAACV,GAAD,OAAgBjB,GAAA,WAAAnB,OAAwBoC,KACrDW,cAAe,SAACC,GAAD,OAAgC7B,GAAA,YAA0B6B,IACzEC,OAAQ,SAACP,GAAD,OAAsBvB,GAAA,aAAAnB,OAA2B0C,EAA3B,WAA8C,KAC5EQ,SAAU,SAACR,GAAD,OAAsBvB,GAAA,aAAAnB,OAA0B0C,EAA1B,aAChCS,eAAgB,SAACT,EAAkBU,GAAnB,OAAyCjC,GAAA,aAAAnB,OAA0B0C,EAA1B,sBAAA1C,OAAuDoD,KAChHC,eAAgB,SAACX,EAAkBU,GAAnB,OAAyCjC,GAAA,aAAAnB,OAA0B0C,EAA1B,0BAAA1C,OAA2DoD,MAGzGpB,GAlBF,CACTsB,QAAS,kBAAsBnC,GAAa,UAC5CoC,MAAO,SAACC,GAAD,OAA2CrC,GAAA,cAA6BqC,IAC/EC,SAAU,SAACD,GAAD,OAA2CrC,GAAA,iBAAgCqC,KC1D5EE,GAAmB,SAACpB,EAAqBkB,GAQlD,OAPAlB,EAASqB,KAAO,IAAIC,KAAKtB,EAASqB,MAClCrB,EAASuB,QAAUvB,EAASwB,UAAUC,KACpC,SAAAC,GAAC,OAAIA,EAAEtB,WAAac,EAAKd,WAE3BJ,EAAS2B,OAAS3B,EAASwB,UAAUC,KACnC,SAAAC,GAAC,OAAIA,EAAEtB,WAAac,EAAKd,UAAYsB,EAAEC,SAElC3B,GAGE4B,GAAiB,SAACV,GAC3B,MAAO,CACHW,YAAaX,EAAKW,YAClBF,QAAQ,EACRvB,SAAUc,EAAKd,SACf0B,MAAOZ,EAAKY,kBCrBCC,MAqBlBC,IAAWC,iBAnBZ,SAAAF,EAAYG,GAAsB,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAL,GAAAK,KADlCF,eACkC,EAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,mBAAAI,EAAAJ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAAK,EAAAL,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAAM,EAAAN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,aAAAO,EAAAP,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,SAAAQ,EAAAR,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAAS,EAAAT,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAAU,EAAAV,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAAW,EAAAX,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,OAAAY,EAAAZ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAa,EAAAb,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAc,EAAAd,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAAe,EAAAf,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,sBAAAgB,EAAAhB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,oBAAAiB,EAAAjB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,aAAAkB,EAAAlB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAAmB,EAAAnB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAoB,EAAApB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAAqB,EAAArB,WA4KlCsB,YAAc,SAAC5D,GACb,OAAOqC,EAAKwB,iBAAiB5E,IAAIe,IA7KDuC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAAwB,EAAAxB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAyB,EAAAzB,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAA0B,EAAA1B,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAA2B,EAAA3B,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,mBAAA4B,EAAA5B,MAChCA,KAAKF,UAAYA,EAEf+B,YACE,kBAAM9B,EAAKrB,UAAUoD,QACrB,WACE/B,EAAKgC,KAAO,EACZhC,EAAKwB,iBAAiBS,QACtBjC,EAAKkC,qFAiGSC,GACpB,IAAMC,EAAmBD,EAAWE,KAClC,SAAC9C,EAAG+C,GAAJ,OAAU/C,EAAEL,KAAKqD,UAAYD,EAAEpD,KAAKqD,YAEtC,OAAOrC,OAAOsC,QACZJ,EAAiBK,OACf,SAACN,EAAYtE,GACX,IAAMqB,EAAOrB,EAASqB,KAAKwD,cAAcC,MAAM,KAAK,GAIpD,OAHAR,EAAWjD,GAAQiD,EAAWjD,GAAX,GAAA3D,OAAA2E,OAAA0C,EAAA,EAAA1C,CACXiC,EAAWjD,IADA,CACOrB,IACtB,CAACA,GACEsE,GAET,yCAtFJ,IAAM1E,EAAS,IAAIoF,gBAUnB,OATApF,EAAOJ,OAAO,QAASyF,OApCb,IAqCVrF,EAAOJ,OAAO,SAAd,GAAA9B,OAA2B0E,KAAK+B,KArCtB,EAqC6B/B,KAAK+B,KAAe,IAC3D/B,KAAKtB,UAAUoE,QAAQ,SAACC,EAAOC,GACjB,cAARA,EACFxF,EAAOJ,OAAO4F,EAAKD,EAAMN,eAEzBjF,EAAOJ,OAAO4F,EAAKD,KAGhBvF,qCAIP,OAAOyF,KAAKC,KAAKlD,KAAKmD,cAjDZ,4CAuGV,OAAOnD,KAAKoD,sBACVC,MAAMC,KAAKtD,KAAKuB,iBAAiBgC,kEAxFpC3D,8EAA8B,IAAI4D,6CAClC5D,8EAAwC,oDACxCA,8EAA4B,6CAC5BA,8EAAwB,yCACxBA,6EAAoB,2CACpBA,8EAAqB,4HACgC,mDACrDA,8EAA2B,uCAC3BA,8EAAkB,4CAClBA,8EAAuB,IAAI4D,iDAE3BC,yFAAsB,SAAC/E,EAAmBqE,GACzCW,EAAKhF,UAAUsD,QACG,QAAdtD,GACFgF,EAAKhF,UAAUiF,IAAIjF,EAAWqE,8CAIjCa,mHAcAA,iHAIAH,yFAAiB,SAAC1B,GACjB8B,EAAK9B,KAAOA,uDAGb0B,yFAA6B,SAACK,GAC7BC,EAAKC,eAAgB,IAAIC,MACtBC,QAAQvJ,QAAqC,CAC5CwJ,mBAAoB,kBAAMJ,EAAKjE,UAAUsE,YAAYpJ,SAEtDqJ,iBAAiBC,KAASC,aAC1BC,QAEHT,EAAKC,cACFS,QACA7H,KAAK,kBAAM8H,QAAQC,IAAIZ,EAAKC,cAAeY,SAC3ChI,KAAK,WACJ8H,QAAQC,IAAI,4BACZZ,EAAKC,cAAea,OAAO,aAAcf,KAE1CgB,MAAM,SAAAvJ,GAAK,OAAImJ,QAAQC,IAAI,kCAAmCpJ,KAEjEwI,EAAKC,cAAce,GAAG,iBAAkB,SAAAC,GACtCC,YAAY,WACVlB,EAAKnG,SAAUsH,SAAShJ,KAAK8I,OAIjCjB,EAAKC,cAAce,GAAG,OAAQ,SAAAnJ,GAC5BC,IAAMO,KAAKR,wDAId6H,yFAA2B,WAC1B0B,EAAKnB,cAAea,OAAO,kBAAmBM,EAAKvH,SAAUF,IAC1Dd,KAAK,WACJuI,EAAKnB,cAAeoB,SAErBxI,KAAK,kBAAM8H,QAAQC,IAAI,uBACvBG,MAAM,SAAAO,GAAG,OAAIX,QAAQC,IAAIU,iDAG7B5B,+HAAoB,SAAA6B,EAAO/B,GAAP,OAAAgC,EAAAjG,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBpC,EAAOO,WAAa8B,EAAKhI,SAAUF,GADhB+H,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGXC,EAAK5B,cAAea,OAAO,cAAetB,GAH/B,OAAAkC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKjBf,QAAQC,IAARc,EAAAI,IALiB,wBAAAJ,EAAAL,SAAAE,EAAA,sHASpB1B,8HAwBAH,8GAAwB,SAAAqC,IAAA,IAAAC,EAAA7D,EAAAiB,EAAA,OAAAoC,EAAAjG,EAAAkG,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cACvBM,EAAKC,gBAAiB,EADCF,EAAAN,KAAA,EAAAM,EAAAL,KAAA,EAGYrI,GAAiBC,KAAK0I,EAAKE,aAHvC,OAGfJ,EAHeC,EAAAI,KAIdlE,EAA6B6D,EAA7B7D,WAAYiB,EAAiB4C,EAAjB5C,cACnB8B,YAAY,qBAAsB,WAChC/C,EAAWY,QAAQ,SAAAlF,GACjBoB,GAAiBpB,EAAUqI,EAAKnG,UAAUuG,UAAUvH,MACpDmH,EAAK1E,iBAAiBoC,IAAI/F,EAASF,GAAIE,KAEzCqI,EAAK9C,cAAgBA,EACrB8C,EAAKC,gBAAiB,IAXHF,EAAAL,KAAA,gBAAAK,EAAAN,KAAA,EAAAM,EAAAH,GAAAG,EAAA,SAcrBf,YAAY,wBAAyB,WACnCgB,EAAKC,gBAAiB,IAfH,yBAAAF,EAAAZ,SAAAU,EAAA,8DAoBxBrC,+HAAsB,SAAA6C,EAAO5I,GAAP,IAAAE,EAAA,OAAA2H,EAAAjG,EAAAkG,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,YACjB/H,EAAW4I,EAAKlF,YAAY5D,IADX,CAAA6I,EAAAZ,KAAA,eAGnBa,EAAK5I,SAAWA,EAHG2I,EAAAE,OAAA,SAIZC,YAAK9I,IAJO,cAMnB4I,EAAKN,gBAAiB,EANHK,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,GAQArI,GAAiBG,QAAQC,GARzB,eAQjBE,EARiB2I,EAAAH,KASjBnB,YAAY,mBAAoB,WAC9BjG,GAAiBpB,EAAU4I,EAAK1G,UAAUuG,UAAUvH,MACpD0H,EAAK5I,SAAWA,EAChB4I,EAAKjF,iBAAiBoC,IAAI/F,EAASF,GAAIE,GACvC4I,EAAKN,gBAAiB,IAbPK,EAAAE,OAAA,SAeV7I,GAfU,QAAA2I,EAAAb,KAAA,GAAAa,EAAAV,GAAAU,EAAA,SAiBjBtB,YAAY,qBAAsB,WAChCuB,EAAKN,gBAAiB,IAExBxB,QAAQC,IAAR4B,EAAAV,IApBiB,yBAAAU,EAAAnB,SAAAkB,EAAA,sHAyBtB7C,yFAAuB,WACtBkD,EAAK/I,SAAW,qDAOjB6F,+HAAwB,SAAAmD,EAAOhJ,GAAP,IAAAiJ,EAAAzH,EAAA,OAAAmG,EAAAjG,EAAAkG,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cACvBoB,EAAKC,YAAa,EADKF,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAGfrI,GAAiBK,OAAOC,GAHT,QAIfiJ,EAAWrH,GAAeuH,EAAKjH,UAAUuG,UAAUvH,OAChDS,QAAS,GACdH,EAAY,IACNlD,KAAK2K,GACfjJ,EAASwB,UAAYA,EACrBxB,EAASsH,SAAW,GACpBtH,EAAS2B,QAAS,EAClB0F,YAAY,kBAAmB,WAC7B8B,EAAKxF,iBAAiBoC,IAAI/F,EAASF,GAAIE,GACvCmJ,EAAKC,YAAa,IAEpB/K,GAAQC,KAAR,eAAAZ,OAA4BsC,EAASF,KAfhBoJ,EAAAnB,KAAA,iBAAAmB,EAAApB,KAAA,GAAAoB,EAAAjB,GAAAiB,EAAA,SAiBrB7B,YAAY,wBAAyB,WACnC8B,EAAKC,YAAa,IAEpBnL,IAAMN,MAAM,2BACZmJ,QAAQC,IAAImC,EAAAjB,GAAMnK,UArBG,yBAAAoL,EAAA1B,SAAAwB,EAAA,qHAyBxBnD,+HAAsB,SAAAwD,EAAOrJ,GAAP,OAAA2H,EAAAjG,EAAAkG,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACrBwB,EAAKH,YAAa,EADGE,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAGbrI,GAAiBO,OAAOD,GAHX,OAInBqH,YAAY,mBAAoB,WAC9BkC,EAAK5F,iBAAiBoC,IAAI/F,EAASF,GAAIE,GACvCuJ,EAAKvJ,SAAWA,EAChBuJ,EAAKH,YAAa,IAEpB/K,GAAQC,KAAR,eAAAZ,OAA4BsC,EAASF,KATlBwJ,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAArB,GAAAqB,EAAA,SAWnBjC,YAAY,sBAAuB,WACjCkC,EAAKH,YAAa,IAEpBnL,IAAMN,MAAM,2BACZmJ,QAAQC,IAARuC,EAAArB,IAfmB,yBAAAqB,EAAA9B,SAAA6B,EAAA,sHAmBtBxD,+HAAwB,SAAA2D,EACvBC,EACA3J,GAFuB,OAAA6H,EAAAjG,EAAAkG,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAIvB4B,EAAKP,YAAa,EAClBO,EAAKC,OAASH,EAAMI,cAAcC,KALXJ,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAOfrI,GAAiBN,OAAOU,GAPT,OAQrBuH,YAAY,oBAAqB,WAC/BsC,EAAKhG,iBAAiBvE,OAAOU,GAC7B6J,EAAKP,YAAa,EAClBO,EAAKC,OAAS,KAXKF,EAAA3B,KAAA,gBAAA2B,EAAA5B,KAAA,EAAA4B,EAAAzB,GAAAyB,EAAA,SAcrBrC,YAAY,wBAAyB,WACnCsC,EAAKP,YAAa,EAClBO,EAAKC,OAAS,KAEhB9C,QAAQC,IAAR2C,EAAAzB,IAlBqB,yBAAAyB,EAAAlC,SAAAgC,EAAA,wHAsBxB3D,8GAAwB,SAAAkE,IAAA,IAAAd,EAAA,OAAAtB,EAAAjG,EAAAkG,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cACjBkB,EAAWrH,GAAeqI,EAAK/H,UAAUuG,UAAUvH,MACzD+I,EAAKC,SAAU,EAFQF,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAIfrI,GAAiBQ,OAAO+J,EAAKjK,SAAUF,IAJxB,OAKrBuH,YAAY,WACN4C,EAAKjK,WACPiK,EAAKjK,SAASwB,UAAUlD,KAAK2K,GAC7BgB,EAAKjK,SAASuB,SAAU,EACxB0I,EAAKtG,iBAAiBoC,IAAIkE,EAAKjK,SAASF,GAAImK,EAAKjK,UACjDiK,EAAKC,SAAU,KAVEF,EAAAjC,KAAA,gBAAAiC,EAAAlC,KAAA,EAAAkC,EAAA/B,GAAA+B,EAAA,SAcrB3C,YAAY,WACV4C,EAAKC,SAAU,IAEjBjM,IAAMN,MAAM,kCAjBS,yBAAAqM,EAAAxC,SAAAuC,EAAA,kEAqBxBlE,8GAA0B,SAAAsE,IAAA,OAAAxC,EAAAjG,EAAAkG,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cACzBsC,EAAKH,SAAU,EADUE,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAGjBrI,GAAiBS,SAASkK,EAAKrK,SAAUF,IAHxB,OAIvBuH,YAAY,WACNgD,EAAKrK,WACPqK,EAAKrK,SAASwB,UAAY6I,EAAKrK,SAASwB,UAAU8I,OAChD,SAAA5I,GAAC,OAAIA,EAAEtB,WAAaiK,EAAKnI,UAAUuG,UAAUvH,KAAMd,WAErDiK,EAAKrK,SAASuB,SAAU,EACxB8I,EAAK1G,iBAAiBoC,IAAIsE,EAAKrK,SAASF,GAAIuK,EAAKrK,UACjDqK,EAAKH,SAAU,KAXIE,EAAArC,KAAA,gBAAAqC,EAAAtC,KAAA,EAAAsC,EAAAnC,GAAAmC,EAAA,SAevB/C,YAAY,WACVgD,EAAKH,SAAU,IAEjBjM,IAAMN,MAAM,iCAlBW,yBAAAyM,EAAA5C,SAAA2C,EAAA,uBC9QRI,iBAEnB,SAAAA,EAAYrI,GAAuBG,OAAAC,EAAA,EAAAD,CAAAD,KAAAmI,GAAAnI,KADnCF,eACkC,EAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,OAAAoI,GAAApI,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,QAAAqI,GAAArI,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAAsI,GAAAtI,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAAuI,GAAAvI,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,SAAAwI,GAAAxI,MAChCA,KAAKF,UAAYA,yDAMjB,QAASE,KAAKlB,iDAHfc,8EAAgC,8CAEhCgE,gHAIAH,+HAAe,SAAA6B,EAAO/B,GAAP,IAAAzE,EAAA,OAAAyG,EAAAjG,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOrI,GAAWuB,MAAM0E,GAFxB,OAENzE,EAFM2G,EAAAW,KAGZnB,YAAY,WACVlF,EAAKjB,KAAOA,IAEdiB,EAAKD,UAAUsE,YAAYqE,SAAS3J,EAAK9D,OACzC+E,EAAKD,UAAU4I,WAAWC,aAC1B1M,GAAQC,KAAK,eARDuJ,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAAAA,EAAAI,GAAA,yBAAAJ,EAAAL,SAAAE,EAAA,kHAcf7B,+HAAkB,SAAAqC,EAAOvC,GAAP,IAAAzE,EAAA,OAAAyG,EAAAjG,EAAAkG,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAN,KAAA,EAAAM,EAAAL,KAAA,EAEIrI,GAAWyB,SAASwE,GAFxB,OAETzE,EAFSkH,EAAAI,KAGf1C,EAAK5D,UAAUsE,YAAYqE,SAAS3J,EAAK9D,OACzC0I,EAAK5D,UAAU4I,WAAWC,aAC1B1M,GAAQC,KAAK,eALE8J,EAAAL,KAAA,sBAAAK,EAAAN,KAAA,EAAAM,EAAAH,GAAAG,EAAA,SAAAA,EAAAH,GAAA,yBAAAG,EAAAZ,SAAAU,EAAA,gHAWlBrC,8GAAiB,SAAA6C,IAAA,IAAAxH,EAAA,OAAAyG,EAAAjG,EAAAkG,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAEKrI,GAAWsB,UAFhB,OAERE,EAFQyH,EAAAH,KAGdnB,YAAY,WACVpB,EAAK/E,KAAOA,IAJAyH,EAAAZ,KAAA,gBAAAY,EAAAb,KAAA,EAAAa,EAAAV,GAAAU,EAAA,SAOd7B,QAAQC,IAAR4B,EAAAV,IAPc,yBAAAU,EAAAnB,SAAAkB,EAAA,yDAWjB7C,yFAAgB,WACfM,EAAKjE,UAAUsE,YAAYqE,SAAS,MACpC1E,EAAKjF,KAAO,KACZ7C,GAAQC,KAAK,YCtDI0M,OAEjB,SAAAA,EAAY9I,GAAqB,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAA4I,GAAA5I,KADjCF,eACiC,EAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,QAAA6I,GAAA7I,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAA8I,GAAA9I,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAA+I,GAAA/I,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAgJ,GAAAhJ,MAC7BA,KAAKF,UAAYA,EAEjB+B,YAAS,kBAAM9B,EAAK/E,OACpB,SAAAA,GACOA,EACCC,OAAOC,aAAa+N,QAAQ,MAAOjO,GAEnCC,OAAOC,aAAaiB,WAAW,+CAK1CyD,8EAAkC3E,OAAOC,aAAaC,QAAQ,mDAC9DyE,8EAAuB,6CAEvB6D,yFAAkB,SAACzI,GAChBC,OAAOC,aAAa+N,QAAQ,MAAOjO,GACnC0I,EAAK1I,MAAQA,kDAGhByI,yFAAsB,WACnBI,EAAKqF,WAAY,UCxBJC,OAMhBvJ,IAAWwJ,WAJZ,SAAAD,EAAYrJ,GAAuBG,OAAAC,EAAA,EAAAD,CAAAD,KAAAmJ,GAAAnJ,KADnCF,eACkC,EAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,QAAAqJ,GAAArJ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAsJ,GAAAtJ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,aAAAuJ,GAAAvJ,MAC9BA,KAAKF,UAAYA,oHAGO,CACxB0J,MAAM,EACN3M,KAAM,kDAGT4G,yFAAmB,SAACgG,GACjB1J,EAAK2J,MAAMF,MAAO,EAClBzJ,EAAK2J,MAAM7M,KAAO4M,gDAGrBhG,yFAAoB,WACjBC,EAAKgG,MAAMF,MAAO,EAClB9F,EAAKgG,MAAM7M,KAAO,uBCfL8M,kBAEnB,SAAAA,EAAY7J,GAAsB,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAA2J,GAAA3J,KADlCF,eACkC,EAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAA4J,GAAA5J,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAA6J,GAAA7J,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAA8J,GAAA9J,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAA+J,GAAA/J,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,aAAAgK,GAAAhK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAiK,GAAAjK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAAkK,GAAAlK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,oBAAAmK,GAAAnK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,qBAAAoK,GAAApK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAqK,GAAArK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,cAAAsK,GAAAtK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,cAAAuK,GAAAvK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAwK,GAAAxK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,cAAAyK,GAAAzK,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAA0K,GAAA1K,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,SAAA2K,GAAA3K,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAA4K,GAAA5K,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,iBAAA6K,GAAA7K,MAChCA,KAAKF,UAAYA,EAEjB+B,YACI,kBAAM9B,EAAK+K,WACX,SAAAA,GACI,GAAkB,IAAdA,GAAiC,IAAdA,EAAiB,CACpC,IAAMpM,EAA0B,IAAdoM,EAAkB,YAAc,YAClD/K,EAAKgL,eAAerM,QAEpBqB,EAAKiL,WAAa,+DAgB9B,SAAIhL,KAAKF,UAAUuG,UAAUvH,OAAQkB,KAAK1B,UACjC0B,KAAKF,UAAUuG,UAAUvH,KAAKd,WAAagC,KAAK1B,QAAQN,yDAXlE4B,8EAAsC,sDACtCA,8EAA4B,mDAC5BA,8EAA4B,4CAC5BA,8EAAqB,+CACrBA,6EAAoC,+CACpCA,8EAA+B,mDAC/BA,6EAA6C,uDAC7CA,8EAA+B,+CAE/BgE,mIAQAH,+HAA4B,SAAA6B,EAAOtH,EAAkBU,GAAzB,IAAAwD,EAAA,OAAAqD,EAAAjG,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3BjC,EAAKuH,mBAAoB,EADExF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGArI,GAAeqB,eAAeX,EAAUU,GAHxC,OAGnBwD,EAHmBuD,EAAAW,KAIzBnB,YAAY,WACVvB,EAAKwH,eAAiBhJ,EACtBwB,EAAKuH,mBAAoB,IANFxF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SASzB5J,IAAMN,MAAM,8BACZ0J,YAAY,WACVvB,EAAKuH,mBAAoB,IAXF,yBAAAxF,EAAAL,SAAAE,EAAA,wHAgB5B7B,yFAAsB,SAAC0H,GACpBtH,EAAKiH,UAAYK,iDAGpB1H,+HAAqB,SAAAqC,EAAO9H,GAAP,IAAAM,EAAA,OAAAiH,EAAAjG,EAAAkG,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cACpB5B,EAAKqH,gBAAiB,EADFpF,EAAAN,KAAA,EAAAM,EAAAL,KAAA,EAGIrI,GAAeX,IAAIqB,GAHvB,OAGZM,EAHY0H,EAAAI,KAIlBnB,YAAY,WACVlB,EAAKzF,QAAUA,EACfyF,EAAKqH,gBAAiB,IANNpF,EAAAL,KAAA,gBAAAK,EAAAN,KAAA,EAAAM,EAAAH,GAAAG,EAAA,SASlBf,YAAY,WACVlB,EAAKqH,gBAAiB,IAExB1G,QAAQC,IAARqB,EAAAH,IAZkB,yBAAAG,EAAAZ,SAAAU,EAAA,qHAgBrBrC,+HAAqB,SAAA6C,EAAOrJ,GAAP,IAAAiB,EAAA,OAAAqH,EAAAjG,EAAAkG,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACpBR,EAAKkG,gBAAiB,EADF9E,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAGErI,GAAeW,YAAYhB,GAH7B,OAGZiB,EAHYqI,EAAAH,KAIlBnB,YAAY,WACNE,EAAK7G,UACP6G,EAAK7G,QAAQgN,OAAOpP,KAAKgC,GACrBA,EAAMqN,QAAUpG,EAAKrF,UAAUuG,UAAUvH,OAC3CqG,EAAKrF,UAAUuG,UAAUvH,KAAKY,MAAQxB,EAAMxB,IAC5CyI,EAAK7G,QAAQoB,MAAQxB,EAAMxB,MAG/ByI,EAAKkG,gBAAiB,IAZN9E,EAAAZ,KAAA,gBAAAY,EAAAb,KAAA,EAAAa,EAAAV,GAAAU,EAAA,SAelB7B,QAAQC,IAAR4B,EAAAV,IACAhK,IAAMN,MAAM,2BACZ0J,YAAY,WACVE,EAAKkG,gBAAiB,IAlBN,yBAAA9E,EAAAnB,SAAAkB,EAAA,sHAuBrB7C,+HAAsB,SAAAmD,EAAO1I,GAAP,OAAAqH,EAAAjG,EAAAkG,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cACrBC,EAAKkC,SAAU,EADMhB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAGbrI,GAAea,aAAaD,EAAMR,IAHrB,OAInBuH,YAAY,WACVW,EAAK9F,UAAUuG,UAAUvH,KAAMY,MAAQxB,EAAMxB,IAC7CkJ,EAAKtH,QAASgN,OAAOE,KAAK,SAAAlM,GAAC,OAAIA,EAAEiM,SAASA,QAAS,EACnD3F,EAAKtH,QAASgN,OAAOE,KAAK,SAAAlM,GAAC,OAAIA,EAAE5B,KAAOQ,EAAMR,KAAK6N,QAAS,EAC5D3F,EAAKtH,QAASoB,MAAQxB,EAAMxB,IAC5BkJ,EAAKkC,SAAU,IATEhB,EAAAnB,KAAA,gBAAAmB,EAAApB,KAAA,EAAAoB,EAAAjB,GAAAiB,EAAA,SAYnBjL,IAAMN,MAAM,iCACZ0J,YAAY,WACVW,EAAKkC,SAAU,IAdE,yBAAAhB,EAAA1B,SAAAwB,EAAA,qHAmBtBnD,+HAAqB,SAAAwD,EAAO/I,GAAP,OAAAqH,EAAAjG,EAAAkG,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACpBM,EAAK6B,SAAU,EADKZ,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAGZrI,GAAec,YAAYF,EAAMR,IAHrB,OAIlBuH,YAAY,WACVgB,EAAK3H,QAASgN,OAASrF,EAAK3H,QAASgN,OAAOpD,OAC1C,SAAA5I,GAAC,OAAIA,EAAE5B,KAAOQ,EAAMR,KAEtBuI,EAAK6B,SAAU,IARCZ,EAAAvB,KAAA,gBAAAuB,EAAAxB,KAAA,EAAAwB,EAAArB,GAAAqB,EAAA,SAWlBrL,IAAMN,MAAM,8BACZ0J,YAAY,WACVgB,EAAK6B,SAAU,IAbC,yBAAAZ,EAAA9B,SAAA6B,EAAA,uHAkBrBxD,+HAAuB,SAAA2D,EAAO9I,GAAP,OAAAiH,EAAAjG,EAAAkG,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEdrI,GAAee,cAAcC,GAFf,OAGpB2G,YAAY,WAER3G,EAAQmB,cAAgB+G,EAAK1G,UAAUuG,UAAUvH,KAAMW,cAEvD+G,EAAK1G,UAAUuG,UAAUvH,KAAMW,YAAcnB,EAAQmB,aAEvD+G,EAAKlI,QAAL2B,OAAAwL,GAAA,EAAAxL,CAAA,GAAoBuG,EAAKlI,QAAaA,KATpBgJ,EAAA3B,KAAA,eAAA2B,EAAA5B,KAAA,EAAA4B,EAAAzB,GAAAyB,EAAA,SAYpBzL,IAAMN,MAAM,4BAZQ,wBAAA+L,EAAAlC,SAAAgC,EAAA,gHAgBvB3D,+HAAgB,SAAAkE,EAAO3J,GAAP,OAAAuH,EAAAjG,EAAAkG,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cACfgB,EAAKmB,SAAU,EADAF,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAGPrI,GAAeiB,OAAOP,GAHf,OAIbiH,YAAY,WACV0B,EAAKrI,QAASoN,WAAY,EAC1B/E,EAAKrI,QAASqN,iBACdhF,EAAKmB,SAAU,IAPJF,EAAAjC,KAAA,gBAAAiC,EAAAlC,KAAA,EAAAkC,EAAA/B,GAAA+B,EAAA,SAUb/L,IAAMN,MAAM,0BACZ0J,YAAY,WACV0B,EAAKmB,SAAU,IAZJ,yBAAAF,EAAAxC,SAAAuC,EAAA,kHAiBhBlE,+HAAkB,SAAAsE,EAAO/J,GAAP,OAAAuH,EAAAjG,EAAAkG,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cACjBoB,EAAKe,SAAU,EADEE,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAGTrI,GAAekB,SAASR,GAHf,OAIfiH,YAAY,WACV8B,EAAKzI,QAASoN,WAAY,EAC1B3E,EAAKzI,QAASqN,iBACd5E,EAAKe,SAAU,IAPFE,EAAArC,KAAA,gBAAAqC,EAAAtC,KAAA,EAAAsC,EAAAnC,GAAAmC,EAAA,SAUfnM,IAAMN,MAAM,4BACZ0J,YAAY,WACV8B,EAAKe,SAAU,IAZF,yBAAAE,EAAA5C,SAAA2C,EAAA,wHAiBlBtE,+HAAwB,SAAAmI,EAAOlN,GAAP,IAAAmN,EAAA,OAAAtG,EAAAjG,EAAAkG,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cACvBwB,EAAKW,SAAU,EADQgE,EAAApG,KAAA,EAAAoG,EAAAnG,KAAA,EAGErI,GAAemB,eACpC0I,EAAK7I,QAASN,SACdU,GALmB,OAGfmN,EAHeC,EAAA1F,KAOrBnB,YAAY,WACRkC,EAAK6D,WAAaa,EAClB1E,EAAKW,SAAU,IATEgE,EAAAnG,KAAA,gBAAAmG,EAAApG,KAAA,EAAAoG,EAAAjG,GAAAiG,EAAA,SAYrBjQ,IAAMN,MAAM,8BACZ0J,YAAY,WACVkC,EAAKW,SAAU,IAdI,yBAAAgE,EAAA1G,SAAAwG,EAAA,8ECnL3BG,YAAU,CAACC,eAAgB,WAEpB,IAiBMC,GAAmBC,wBAAc,IAV1C,SAAAC,IAAelM,OAAAC,EAAA,EAAAD,CAAAD,KAAAmM,GAAAnM,KANfoM,mBAMc,EAAApM,KALdqG,eAKc,EAAArG,KAJdoE,iBAIc,EAAApE,KAHd0I,gBAGc,EAAA1I,KAFdqM,kBAEc,EACVrM,KAAKoM,cAAgB,IAAIzM,GAAcK,MACvCA,KAAKqG,UAAY,IAAI8B,GAAUnI,MAC/BA,KAAKoE,YAAc,IAAIwE,GAAY5I,MACnCA,KAAK0I,WAAa,IAAIS,GAAWnJ,MACjCA,KAAKqM,aAAe,IAAI1C,GAAa3J,QCwB9BsM,eAxCU,WACvB,IAD6BC,EACXC,qBAAWP,IACM5F,UAA3BvH,EAFqByN,EAErBzN,KAAM2N,EAFeF,EAEfE,OACd,OACEC,EAAApN,EAAAqN,cAACC,EAAA,EAAD,CAAMC,MAAM,MAAMC,UAAQ,GACxBJ,EAAApN,EAAAqN,cAACI,EAAA,EAAD,KACEL,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CAAWC,QAAM,EAACC,GAAIC,IAASC,OAAK,EAACC,GAAG,KACtCX,EAAApN,EAAAqN,cAAA,OAAKW,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAEC,YAAa,MAD/D,gBAIAf,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CAAWtF,KAAK,aAAawF,GAAIC,IAASE,GAAG,gBAC7CX,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,KACEN,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACER,GAAIC,IACJE,GAAG,kBACHM,UAAQ,EACRlE,QAAQ,qBAGX3K,GACC4N,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CAAWY,SAAS,SAClBlB,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CAAOC,QAAM,EAACC,OAAO,QAAQT,IAAKxO,EAAKY,OAAS,qBAChDgN,EAAApN,EAAAqN,cAACqB,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAMpP,EAAKW,aACvCiN,EAAApN,EAAAqN,cAACqB,EAAA,EAASpB,KAAV,KACEF,EAAApN,EAAAqN,cAACqB,EAAA,EAAShB,KAAV,CACEE,GAAIiB,IACJd,GAAE,YAAA/R,OAAcwD,EAAKd,UACrBkQ,KAAK,aACLE,KAAK,SAEP1B,EAAApN,EAAAqN,cAACqB,EAAA,EAAShB,KAAV,CAAeqB,QAAS5B,EAAQyB,KAAK,SAASE,KAAK,mHC5B7DE,GAAS,CACbC,YAAa,SACbC,YAAa,GA0BAC,GAvBqC,SAAAC,GAAmB,IAAhBtP,EAAgBsP,EAAhBtP,UACrD,OACEsN,EAAApN,EAAAqN,cAACgC,GAAA,EAAD,CAAMC,YAAU,GACbxP,EAAUyP,IAAI,SAAAhI,GAAQ,OACrB6F,EAAApN,EAAAqN,cAACgC,GAAA,EAAK3B,KAAN,CAAWhK,IAAK6D,EAAS7I,UACvB0O,EAAApN,EAAAqN,cAACmC,GAAA,EAAD,CACE7B,OAAQpG,EAASpH,YACjBsP,QACErC,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CACEmB,KAAK,OACLC,UAAQ,EACR3B,IAAKzG,EAASnH,OAAS,mBACvBwP,UAAQ,EACR1B,MAAO3G,EAAS6E,UAAY4C,GAAS,cC6CtCa,GAhE6C,SAAAT,GAAkB,IAAf9Q,EAAe8Q,EAAf9Q,SACvDwR,EAAOxR,EAASwB,UAAU8I,OAAO,SAAAmH,GAAC,OAAIA,EAAE9P,SAAQ,GACtD,OACEmN,EAAApN,EAAAqN,cAAC2C,GAAA,EAAQC,MAAT,KACE7C,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,KACE5C,EAAApN,EAAAqN,cAACK,GAAA,EAAKuC,MAAN,KACE7C,EAAApN,EAAAqN,cAACK,GAAA,EAAD,KACEN,EAAApN,EAAAqN,cAACK,GAAA,EAAKa,MAAN,CACEmB,KAAK,OACLC,UAAQ,EACR3B,IAAK8B,EAAK1P,OAAS,mBACnB8N,MAAO,CAAEgC,aAAc,KAEzB9C,EAAApN,EAAAqN,cAACK,GAAA,EAAKyC,QAAN,KACE/C,EAAApN,EAAAqN,cAACK,GAAA,EAAK0C,OAAN,CAAaxC,GAAIiB,IAAMd,GAAE,eAAA/R,OAAiBsC,EAASF,KAChDE,EAAS+R,OAEZjD,EAAApN,EAAAqN,cAACK,GAAA,EAAK4C,YAAN,iBAEElD,EAAApN,EAAAqN,cAACkD,EAAA,EAAD,CAAMxC,GAAE,YAAA/R,OAAc8T,EAAKpR,WAA3B,IAAyCoR,EAAK3P,cAE/C7B,EAAS2B,QACRmN,EAAApN,EAAAqN,cAACK,GAAA,EAAK4C,YAAN,KACElD,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CACEC,OAAK,EACLC,MAAM,SACNvG,QAAQ,mCAIb7L,EAASuB,UAAYvB,EAAS2B,QAC7BmN,EAAApN,EAAAqN,cAACK,GAAA,EAAK4C,YAAN,KACElD,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CACEC,OAAK,EACLC,MAAM,QACNvG,QAAQ,wCAQtBiD,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,KACE5C,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,UADb,IACyBwI,aAAOtS,EAASqB,KAAM,UAC7CyN,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,WAFb,IAE0B9J,EAASuS,MAFnC,KAE4CvS,EAASwS,MAErD1D,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASe,WAAS,GAChB3D,EAAApN,EAAAqN,cAAC2D,GAAD,CAA2BlR,UAAWxB,EAASwB,aAEjDsN,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASiB,UAAQ,GACf7D,EAAApN,EAAAqN,cAAA,YAAO/O,EAAS4S,aAChB9D,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACER,GAAIiB,IACJd,GAAE,eAAA/R,OAAiBsC,EAASF,IAC5B+S,QAAQ,QACRhH,QAAQ,OACRuG,MAAM,YClCD1D,eAvBgB,WAE7B,IACQoE,EADUlE,qBAAWP,IACUG,cAA/BsE,iBAER,OACEhE,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACGD,EAAiB7B,IAAI,SAAAH,GAAA,IAAAkC,EAAA3Q,OAAA4Q,GAAA,EAAA5Q,CAAAyO,EAAA,GAAEoC,EAAFF,EAAA,GAAS1O,EAAT0O,EAAA,UACpBlE,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,CAAU3N,IAAK8N,GACbpE,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CAAOd,KAAK,QAAQgB,MAAM,QACzBE,aAAO,IAAIhR,KAAK4R,GAAQ,iBAEzBpE,EAAApN,EAAAqN,cAACK,GAAA,EAAKuC,MAAN,CAAYwB,SAAO,GAChB7O,EAAW2M,IAAI,SAAAjR,GAAQ,OACtB8O,EAAApN,EAAAqN,cAACqE,GAAD,CAAkBhO,IAAKpF,EAASF,GAAIE,SAAUA,sDC4B7C0O,eA3CS,WACtB,IAD4B2E,EACVzE,qBAAWP,IACiBG,cAAtC1N,EAFoBuS,EAEpBvS,UAAWwS,EAFSD,EAETC,aACnB,OACExE,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAACC,EAAA,EAAD,CAAMuE,UAAQ,EAACnC,KAAM,QAASxB,MAAO,CAAE4D,MAAO,OAAQC,UAAW,KAC/D3E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQtB,KAAM,SAAUkD,UAAQ,EAACtB,MAAO,OAAQvG,QAAS,YACzDiD,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CACEuE,OAA2B,IAAnB7S,EAAUsQ,KAClBX,QAAS,kBAAM6C,EAAa,MAAO,SACnClB,MAAO,OACPtI,KAAM,MACN+B,QAAS,mBAEXiD,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CACEuE,OAAQ7S,EAAU8S,IAAI,WACtBnD,QAAS,kBAAM6C,EAAa,UAAW,SACvClB,MAAO,OACPtI,KAAM,WACN+B,QAAS,cAEXiD,EAAApN,EAAAqN,cAACC,EAAA,EAAKI,KAAN,CACEuE,OAAQ7S,EAAU8S,IAAI,UACtBnD,QAAS,kBAAM6C,EAAa,SAAU,SACtClB,MAAO,OACPtI,KAAM,OACN+B,QAAS,iBAGbiD,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACEtB,KAAM,WACNkD,UAAQ,EACRtB,MAAO,OACPvG,QAAS,gBAEXiD,EAAApN,EAAAqN,cAAC8E,GAAA,SAAD,CACEC,SAAU,SAAAzS,GAAI,OAAIiS,EAAa,YAAajS,IAC5C8D,MAAOrE,EAAU/B,IAAI,cAAgB,IAAIuC,oBCVlCyS,GA/BqB,WAClC,OACEjF,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAACiF,GAAA,EAAD,CAAaC,OAAK,EAACrE,MAAO,CAAE6D,UAAW,KACrC3E,EAAApN,EAAAqN,cAAC2C,GAAA,EAAQC,MAAT,KACE7C,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAAS9B,MAAO,CAAEsE,UAAW,MAC3BpF,EAAApN,EAAAqN,cAACiF,GAAA,EAAD,KACElF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYlC,OAAb,CAAoBhQ,OAAK,GACvBgN,EAAApN,EAAAqN,cAACiF,GAAA,EAAYG,KAAb,MACArF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYG,KAAb,OAEFrF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYI,UAAb,KACEtF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYG,KAAb,SAINrF,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,KACE5C,EAAApN,EAAAqN,cAACiF,GAAA,EAAD,KACElF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYG,KAAb,MACArF,EAAApN,EAAAqN,cAACiF,GAAA,EAAYG,KAAb,QAGJrF,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASe,WAAS,EAAC7C,MAAO,CAAEsE,UAAW,MACvCpF,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASiB,UAAQ,GACf7D,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQuE,UAAQ,EAACjC,MAAM,OAAOS,QAAQ,QAAQhH,QAAQ,cC8BnD6C,eA/CqB,WAClC,IADwC2E,EACtBzE,qBAAWP,IAOfG,cALZnK,EAHsCgP,EAGtChP,eACAiE,EAJsC+K,EAItC/K,eACAgM,EALsCjB,EAKtCiB,QACAnQ,EANsCkP,EAMtClP,KACAoQ,EAPsClB,EAOtCkB,WAPsCC,EASFC,oBAAS,GATPC,EAAArS,OAAA4Q,GAAA,EAAA5Q,CAAAmS,EAAA,GASjCG,EATiCD,EAAA,GASpBE,EAToBF,EAAA,GAqBxC,OAJAG,oBAAU,WACRxQ,KACC,CAACA,IAGFyK,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IACjBlL,GAA2B,IAATnE,EACjB2K,EAAApN,EAAAqN,cAACiG,GAAD,MAEAlG,EAAApN,EAAAqN,cAACkG,GAAAvT,EAAD,CACEwT,UAAW,EACXC,SAlBY,WACpBP,GAAe,GACfN,EAAQnQ,EAAO,GACfE,IAAiBrF,KAAK,kBAAM4V,GAAe,MAgBnCQ,SAAUT,GAAexQ,EAAO,EAAIoQ,EACpCc,aAAa,GAEbvG,EAAApN,EAAAqN,cAACuG,GAAD,QAINxG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAACwG,GAAD,OAEFzG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAACyG,GAAA,EAAD,CAAQ7B,OAAQgB,qCCvBTc,GAnBqB,SAAA3E,GAM9B,IALJ4E,EAKI5E,EALJ4E,MACAlC,EAII1C,EAJJ0C,MACAmC,EAGI7E,EAHJ6E,KACAC,EAEI9E,EAFJ8E,YAEIC,EAAA/E,EADJgF,KAAQC,EACJF,EADIE,QAASpY,EACbkY,EADalY,MAEjB,OACEmR,EAAApN,EAAAqN,cAACiH,GAAA,EAAKC,MAAN,CAAYtY,MAAOoY,KAAapY,EAAOgY,KAAMA,EAAMnC,MAAOA,GACxD1E,EAAApN,EAAAqN,cAAA,QAAA1M,OAAA6T,OAAA,GAAWR,EAAX,CAAkBE,YAAaA,KAC9BG,GAAWpY,GACVmR,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBzU,iCCKIwY,GAhBwB,SAAArF,GAAqB,IAAlBnT,EAAkBmT,EAAlBnT,MAAO2S,EAAWQ,EAAXR,KAC/C,OACExB,EAAApN,EAAAqN,cAACqH,GAAA,EAAD,CAASzY,OAAK,GACZmR,EAAApN,EAAAqN,cAACqH,GAAA,EAAQtE,OAAT,KAAiBnU,EAAM0Y,YACtB1Y,EAAMS,MAAQiE,OAAO6B,KAAKvG,EAAMS,MAAMkY,OAAS,GAC9CxH,EAAApN,EAAAqN,cAACqH,GAAA,EAAQrF,KAAT,KACG1O,OAAOsD,OAAOhI,EAAMS,MAAMmY,OAAOtF,IAAI,SAACxJ,EAAK+O,GAAN,OACpC1H,EAAApN,EAAAqN,cAACqH,GAAA,EAAQhH,KAAT,CAAchK,IAAKoR,GAAI/O,MAI5B6I,GAAQxB,EAAApN,EAAAqN,cAACqH,GAAA,EAAQvE,QAAT,CAAiBhG,QAASyE,MCVnCmG,GAAWC,6BAAkB,CACjCC,MAAOC,sBAAW,SAClBC,SAAUD,sBAAW,cAuDRE,GApDG,WAChB,IACQ7V,EADU2N,qBAAWP,IACD5F,UAApBxH,MACR,OACE6N,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEC,SAAU,SAACrR,GAAD,OACR1E,EAAM0E,GAAQuB,MAAM,SAAAvJ,GAAK,OAAA0E,OAAA4U,GAAA,EAAA5U,CAAA,GACtB6U,KAAavZ,MAGlB8Y,SAAUA,GACVU,OAAQ,SAAAnE,GAAA,IACNoE,EADMpE,EACNoE,aACAhO,EAFM4J,EAEN5J,WACAiO,EAHMrE,EAGNqE,YACAC,EAJMtE,EAINsE,QACAC,EALMvE,EAKNuE,SACAC,EANMxE,EAMNwE,qBANM,OAQN1I,EAAApN,EAAAqN,cAACiH,GAAA,EAAD,CAAMgB,SAAUI,EAAczZ,OAAK,GACjCmR,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACExC,GAAG,KACHzD,QAAQ,wBACRuG,MAAM,OACNqF,UAAU,WAEZ3I,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CAAOjN,KAAK,QAAQ4N,UAAWjC,GAAWG,YAAY,UACtD9G,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,WACL4N,UAAWjC,GACXG,YAAY,WACZD,KAAK,aAEN0B,IAAgBG,GACf1I,EAAApN,EAAAqN,cAAC4I,GAAD,CACEha,MAAO0Z,EACP/G,KAAK,8BAGTxB,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEuE,SAAWiD,IAAYE,GAAyBD,EAChDrN,QAASd,EACTgJ,MAAM,OACNvG,QAAQ,QACRoI,OAAK,SCjDXwC,GAAWC,6BAAkB,CACjCtW,SAAUwW,sBAAW,YACrB/U,YAAa+U,sBAAW,eACxBD,MAAOC,sBAAW,SAClBC,SAAUD,sBAAW,cA4DRgB,GAzDM,WACnB,IACQzW,EADUyN,qBAAWP,IACE5F,UAAvBtH,SACR,OACE2N,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEC,SAAU,SAACrR,GAAD,OACRxE,EAASwE,GAAQuB,MAAM,SAAAvJ,GAAK,OAAA0E,OAAA4U,GAAA,EAAA5U,CAAA,GACzB6U,KAAavZ,MAGlB8Y,SAAUA,GACVU,OAAQ,SAAAnE,GAAA,IACNoE,EADMpE,EACNoE,aACAhO,EAFM4J,EAEN5J,WACAiO,EAHMrE,EAGNqE,YACAC,EAJMtE,EAINsE,QACAC,EALMvE,EAKNuE,SACAC,EANMxE,EAMNwE,qBANM,OAQN1I,EAAApN,EAAAqN,cAACiH,GAAA,EAAD,CAAMgB,SAAUI,EAAczZ,OAAK,GACjCmR,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACExC,GAAG,KACHzD,QAAQ,0BACRuG,MAAM,OACNqF,UAAU,WAEZ3I,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CAAOjN,KAAK,WAAW4N,UAAWjC,GAAWG,YAAY,aACzD9G,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,cACL4N,UAAWjC,GACXG,YAAY,iBAEd9G,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CAAOjN,KAAK,QAAQ4N,UAAWjC,GAAWG,YAAY,UACtD9G,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,WACL4N,UAAWjC,GACXG,YAAY,WACZD,KAAK,aAEN0B,IAAgBG,GACf1I,EAAApN,EAAAqN,cAAC4I,GAAD,CACEha,MAAO0Z,IAGXvI,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEuE,SAAWiD,IAAYE,GAAyBD,EAChDrN,QAASd,EACTgJ,MAAM,OACNvG,QAAQ,WACRoI,OAAK,SClBF4D,GAzCE,WACb,IAAMza,EAAQC,OAAOC,aAAaC,QAAQ,OACpC2E,EAAY0M,qBAAWP,IAFVM,EAGQzM,EAAUuG,UAA9BqP,EAHYnJ,EAGZmJ,WAAY5W,EAHAyN,EAGAzN,KACZ6W,EAAa7V,EAAU4I,WAAvBiN,UACP,OACIjJ,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASxC,UAAQ,EAACuI,UAAU,SAASlE,UAAQ,EAACyE,UAAU,YACpDlJ,EAAApN,EAAAqN,cAACI,EAAA,EAAD,CAAWmB,MAAI,GACXxB,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQxC,GAAG,KAAKJ,UAAQ,GACxBJ,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CACImB,KAAK,UACL1B,IAAI,mBACJC,IAAI,OACJC,MAAO,CAAEgC,aAAc,MAL3B,gBASCkG,GAAc5W,GAAQ9D,EACnB0R,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACIjE,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQxC,GAAG,KAAKJ,UAAQ,EAACrD,QAAO,gBAAAnO,OAAkBwD,EAAKW,eACvDiN,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQR,GAAIiB,IAAMd,GAAG,cAAc2B,KAAK,OAAOlC,UAAQ,GAAvD,sBAKAJ,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACIjE,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQxC,GAAG,KAAKJ,UAAQ,EAACrD,QAAO,4BAChCiD,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQW,QAAS,kBAAMsH,EAAUjJ,EAAApN,EAAAqN,cAACkJ,GAAD,QAAgB7G,KAAK,OAAOlC,UAAQ,GAArE,SAGAJ,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQW,QAAS,kBAAMsH,EAAUjJ,EAAApN,EAAAqN,cAACmJ,GAAD,QAAmB9G,KAAK,OAAOlC,UAAQ,GAAxE,0BCLfiJ,GAUX,SAAAA,EAAYC,GAA6B/V,OAAAC,EAAA,EAAAD,CAAAD,KAAA+V,GAAA/V,KATzCtC,QAAc/B,EAS0BqE,KARxC2P,MAAgB,GAQwB3P,KAPxCiW,SAAmB,GAOqBjW,KANxCwQ,YAAsB,GAMkBxQ,KALxCf,UAActD,EAK0BqE,KAJxCkW,UAAcva,EAI0BqE,KAHxCoQ,KAAe,GAGyBpQ,KAFxCmQ,MAAgB,GAGV6F,GAAQA,EAAK/W,OACf+W,EAAKE,KAAOF,EAAK/W,MAEnBgB,OAAO6T,OAAO9T,KAAMgW,cCnBTG,GAnByB,SAAAzH,GAMlC,IALJ4E,EAKI5E,EALJ4E,MACAlC,EAII1C,EAJJ0C,MACAgF,EAGI1H,EAHJ0H,KACA5C,EAEI9E,EAFJ8E,YAEIC,EAAA/E,EADJgF,KAAQC,EACJF,EADIE,QAASpY,EACbkY,EADalY,MAEjB,OACEmR,EAAApN,EAAAqN,cAACiH,GAAA,EAAKC,MAAN,CAAYtY,MAAOoY,KAAapY,EAAO6V,MAAOA,GAC5C1E,EAAApN,EAAAqN,cAAA,WAAA1M,OAAA6T,OAAA,CAAUsC,KAAMA,GAAU9C,EAA1B,CAAiCE,YAAaA,KAC7CG,GAAWpY,GACVmR,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBzU,eCYI8a,GAxBuB,SAAA3H,GAM9B,IALJ4E,EAKI5E,EALJ4E,MACAlC,EAII1C,EAJJ0C,MACAkF,EAGI5H,EAHJ4H,QACA9C,EAEI9E,EAFJ8E,YAEIC,EAAA/E,EADJgF,KAAQC,EACJF,EADIE,QAASpY,EACbkY,EADalY,MAEjB,OACImR,EAAApN,EAAAqN,cAACiH,GAAA,EAAKC,MAAN,CAAYtY,MAAOoY,KAAapY,EAAO6V,MAAOA,GAC9C1E,EAAApN,EAAAqN,cAAC4J,GAAA,EAAD,CACIxT,MAAOuQ,EAAMvQ,MACb2O,SAAU,SAAC8E,EAAGxa,GAAJ,OAAasX,EAAM5B,SAAS1V,EAAK+G,QAC3CyQ,YAAaA,EACb8C,QAASA,IAEZ3C,GAAWpY,GACVmR,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBzU,KCzBA0a,GAAW,CACtB,CAAEjT,IAAK,SAAUkL,KAAM,SAAUnL,MAAO,UACxC,CAAEC,IAAK,UAAWkL,KAAM,UAAWnL,MAAO,WAC1C,CAAEC,IAAK,OAAQkL,KAAM,OAAQnL,MAAO,QACpC,CAAEC,IAAK,OAAQkL,KAAM,OAAQnL,MAAO,QACpC,CAAEC,IAAK,QAASkL,KAAM,QAASnL,MAAO,SACtC,CAAEC,IAAK,SAAUkL,KAAM,SAAUnL,MAAO,WCiC3B0T,GA9BqB,SAAA/H,GAQ5B,IAPJ4E,EAOI5E,EAPJ4E,MACAlC,EAMI1C,EANJ0C,MACAoC,EAKI9E,EALJ8E,YAKIkD,EAAAhI,EAJJzP,YAII,IAAAyX,KAAAC,EAAAjI,EAHJwH,YAGI,IAAAS,KAAAlD,EAAA/E,EAFJgF,KAAQC,EAEJF,EAFIE,QAASpY,EAEbkY,EAFalY,MACdqb,EACC3W,OAAA4W,GAAA,EAAA5W,CAAAyO,EAAA,sDACJ,OACIhC,EAAApN,EAAAqN,cAACiH,GAAA,EAAKC,MAAN,CAAYtY,MAAOoY,KAAapY,EAAO6V,MAAOA,GAC9C1E,EAAApN,EAAAqN,cAAC8E,GAAA,eAADxR,OAAA6T,OAAA,CACIN,YAAaA,EACbzQ,MAAOuQ,EAAMvQ,OAAS,KACtB2O,SAAU4B,EAAM5B,SAChBoF,OAAQxD,EAAMwD,OACdC,UAAW,SAACP,GAAD,OAAOA,EAAEQ,kBACpB/X,KAAMA,EACNiX,KAAMA,GACFU,IAEPjD,GAAWpY,GACVmR,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBzU,KChBP8Y,GAAWC,6BAAkB,CACjC3E,MAAO6E,sBAAW,CAAE5Y,QAAS,gCAC7Bqa,SAAUzB,sBAAW,YACrBhE,YAAayG,6BACXzC,sBAAW,eACX0C,gCAAqB,EAArBA,CAAwB,CACtBtb,QAAS,kDAHAqb,GAMb7G,KAAMoE,sBAAW,QACjBrE,MAAOqE,sBAAW,SAClBvV,KAAMuV,sBAAW,QACjB0B,KAAM1B,sBAAW,UA0IFlI,eAnIiD,SAAAoC,GAG1D,IAFJyI,EAEIzI,EAFJyI,MACAlb,EACIyS,EADJzS,QACIgV,EAEczE,qBAAWP,IAMfG,cAJZpF,EAJEiK,EAIFjK,WACAoQ,EALEnG,EAKFmG,aACAC,EANEpG,EAMFoG,eACAC,EAPErG,EAOFqG,aAPElF,EAU4BC,mBAAS,IAAI0D,IAVzCzD,EAAArS,OAAA4Q,GAAA,EAAA5Q,CAAAmS,EAAA,GAUGxU,EAVH0U,EAAA,GAUaiF,EAVbjF,EAAA,GAAAkF,EAW0BnF,oBAAS,GAXnCoF,EAAAxX,OAAA4Q,GAAA,EAAA5Q,CAAAuX,EAAA,GAWG1P,EAXH2P,EAAA,GAWYC,EAXZD,EAAA,GAaFhF,oBAAU,WACN0E,EAAM3Z,OAAOE,KACfga,GAAW,GACXN,EAAaD,EAAM3Z,OAAOE,IAAId,KAC5B,SAACgB,GAAD,OAAc2Z,EAAY,IAAIxB,GAAmBnY,MACjD+Z,QAAQ,kBAAMD,GAAW,OAE5B,CACDN,EACAD,EAAM3Z,OAAOE,KAkBf,OACEgP,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASiB,UAAQ,GACf7D,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEN,SAAUA,GACVuD,cAAeha,EACfgX,SAtBoB,SAACrR,GAC7B,IAAMsU,ExB7DsB,SAAC5Y,EAAYiX,GAO3C,IAAM4B,EAAa7Y,EAAKwD,cAAcC,MAAM,KAAK,GAC3CqV,EAAa7B,EAAKzT,cAAcC,MAAM,KAAK,GAEjD,OAAO,IAAIxD,KAAK4Y,EAAa,IAAMC,GwBmDbC,CAAmBzU,EAAOtE,KAAMsE,EAAO2S,MACrCtY,GAAY2F,EAA3BtE,KAA2BsE,EAArB2S,KAFgCjW,OAAA4W,GAAA,EAAA5W,CAEXsD,EAFW,kBAI5C,GADD3F,EAASqB,KAAO4Y,EACVja,EAASF,GAOb4Z,EAAa1Z,OAPI,CACjB,IAAIqa,EAAWhY,OAAAwL,GAAA,EAAAxL,CAAA,GACVrC,EADU,CAEbF,GAAIwa,kBAENb,EAAeY,KAcTlD,OAAQ,SAAAnE,GAAA,IAAEoE,EAAFpE,EAAEoE,aAAcE,EAAhBtE,EAAgBsE,QAASC,EAAzBvE,EAAyBuE,SAAzB,OACTzI,EAAApN,EAAAqN,cAACiH,GAAA,EAAD,CAAMgB,SAAUI,EAAclN,QAASA,GACpC4E,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,QACL8L,YAAY,QACZzQ,MAAOnF,EAAS+R,MAChB2F,UAAWjC,KAEb3G,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,cACL8L,YAAY,cACZzQ,MAAOnF,EAAS4S,YAChB4F,KAAM,EACNd,UAAWa,KAEfzJ,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEW,UAAWe,GACXC,QAASL,GACTvO,KAAK,WACL8L,YAAY,WACZzQ,MAAOnF,EAASqY,WAGlBvJ,EAAApN,EAAAqN,cAACiH,GAAA,EAAKrE,MAAN,CAAY4I,OAAO,SACfzL,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEW,UAAWmB,GACX/O,KAAK,OACLzI,MAAM,EACNuU,YAAY,OACZzQ,MAAOnF,EAASqB,OAElByN,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEW,UAAWmB,GACX/O,KAAK,OACLwO,MAAM,EACN1C,YAAY,OACZzQ,MAAOnF,EAASsY,QAItBxJ,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEW,UAAWjC,GACX3L,KAAK,OACL8L,YAAY,OACZzQ,MAAOnF,EAASwS,OAElB1D,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEW,UAAWjC,GACX3L,KAAK,QACL8L,YAAY,QACZzQ,MAAOnF,EAASuS,QAElBzD,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACE5F,QAASd,EACTyJ,QAAQ,QACR9C,UAAQ,EACRsE,SAAUnK,GAAWoN,GAAWC,EAChC5B,KAAK,SACL9J,QAAQ,WAEViD,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEW,QACEzQ,EAASF,GACL,kBAAMzB,EAAQC,KAAR,eAAAZ,OAA4BsC,EAASF,MAC3C,kBAAMzB,EAAQC,KAAK,gBAEzBuU,QAAQ,QACRwB,SAAUnK,EACVyL,KAAK,SACL9J,QAAQ,8BC7IT2O,GAX6D,SAAA1J,GAGtE,IAAA2J,EAAA3J,EAFF5B,gBAEE,IAAAuL,KADF5O,EACEiF,EADFjF,QAEA,OACIiD,EAAApN,EAAAqN,cAAC2L,GAAA,EAAD,CAAQ/G,QAAM,EAACzE,SAAUA,GACrBJ,EAAApN,EAAAqN,cAACyG,GAAA,EAAD,CAAQ3J,QAASA,MCDvB8O,GAAqB,CACzBrQ,OAAQ,mBAGJsQ,GAAyB,CAC7B5K,SAAU,WACV6K,OAAQ,KACRC,KAAM,KACNtH,MAAO,OACPuH,OAAQ,OACR3I,MAAO,SA8DM1D,eA3DmD,SAAAoC,GAE5D,IADJ9Q,EACI8Q,EADJ9Q,SAEMwR,EAAOxR,EAASwB,UAAU8I,OAAO,SAAAmH,GAAC,OAAIA,EAAE9P,SAAQ,GADlD0R,EAEczE,qBAAWP,IACmCG,cAAxDwM,EAHJ3H,EAGI2H,eAAgBC,EAHpB5H,EAGoB4H,iBAAkB/Q,EAHtCmJ,EAGsCnJ,QAC1C,OACE4E,EAAApN,EAAAqN,cAAC2C,GAAA,EAAQC,MAAT,KACE7C,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASS,OAAK,EAACuB,SAAS,MAAM9D,MAAO,CAAEsL,QAAS,MAC9CpM,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CACEP,IAAG,0BAAAhS,OAA4BsC,EAASqY,SAArC,QACHpE,OAAK,EACLrE,MAAO+K,KAET7L,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAAS9B,MAAOgL,GAAwBzI,OAAK,GAC3CrD,EAAApN,EAAAqN,cAACK,GAAA,EAAKuC,MAAN,KACE7C,EAAApN,EAAAqN,cAACK,GAAA,EAAD,KACEN,EAAApN,EAAAqN,cAACK,GAAA,EAAKyC,QAAN,KACE/C,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACEV,KAAK,OACLvF,QAAS7L,EAAS+R,MAClBnC,MAAO,CAAEwC,MAAO,WAElBtD,EAAApN,EAAAqN,cAAA,SAAIuD,aAAOtS,EAASqB,KAAM,iBAC1ByN,EAAApN,EAAAqN,cAAA,qBACY,IACVD,EAAApN,EAAAqN,cAACkD,EAAA,EAAD,CAAMxC,GAAE,YAAA/R,OAAc8T,EAAKpR,WACzB0O,EAAApN,EAAAqN,cAAA,cAASyC,EAAK3P,oBAQ5BiN,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASiB,UAAQ,EAACe,SAAS,UACxB1T,EAAS2B,OACRmN,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACER,GAAIiB,IACJd,GAAE,WAAA/R,OAAasC,EAASF,IACxBsS,MAAM,SACNS,QAAQ,SAJV,gBAQE7S,EAASuB,QACXuN,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQ5F,QAASA,EAASuG,QAASwK,GAAnC,qBAIAnM,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQ5F,QAASA,EAASuG,QAASuK,EAAgB5I,MAAM,QAAzD,qBC3BK+I,GAvC+C,SAAArK,GAAgB,IAAd9Q,EAAc8Q,EAAd9Q,SAC9D,OACE8O,EAAApN,EAAAqN,cAAC2C,GAAA,EAAQC,MAAT,KACE7C,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASgC,SAAS,OAChB5E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMjB,KAAK,QAAQgB,MAAM,OAAOtI,KAAK,UAEvCgF,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAA,SAAI/O,EAAS4S,gBAInB9D,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASgC,UAAQ,GACf5E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,CAAMsG,cAAc,UAClBtM,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,WAAWsH,KAAK,QAAQgB,MAAM,UAE3CtD,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAA,YAAOuD,aAAOtS,EAASqB,KAAM,gBAA7B,OAAkDiR,aAAOtS,EAASqB,KAAM,cAI9EyN,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASgC,UAAQ,GACf5E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,CAAMsG,cAAc,UAClBtM,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,SAASsH,KAAK,QAAQgB,MAAM,UAEzCtD,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAA,YACG/O,EAASuS,MADZ,KACqBvS,EAASwS,+BC2C3B9D,eArEc,WAC3B,IADiC2E,EACfzE,qBAAWP,IAMfG,cAJZ6M,EAH+BhI,EAG/BgI,oBACAC,EAJ+BjI,EAI/BiI,kBACAC,EAL+BlI,EAK/BkI,WACAvb,EAN+BqT,EAM/BrT,SAUF,OAPA6U,oBAAU,WAER,OADAwG,EAAoBrb,EAAUF,IACvB,WACLwb,MAED,CAACD,EAAqBC,EAAmBtb,IAG1C8O,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CACE+F,UAAU,SACV/D,SAAS,MACTxE,UAAQ,EACRkD,MAAM,OACNxC,MAAO,CAAE4L,OAAQ,SAEjB1M,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,+BAEFhD,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASgC,UAAQ,GACf5E,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQ9J,MAAT,KACG3R,GAAYA,EAASsH,UAAYtH,EAASsH,SAAS2J,IAAI,SAAC7J,GAAD,OACxD0H,EAAApN,EAAAqN,cAAC0M,GAAA,EAAD,CAASrW,IAAKgC,EAAQtH,IACtBgP,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQC,OAAT,CAAgBhM,IAAKtI,EAAQtF,OAAS,qBACtCgN,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQ5J,QAAT,KACE/C,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQE,OAAT,CAAgBrM,GAAIiB,IAAMd,GAAE,YAAA/R,OAAc0J,EAAQhH,WAAagH,EAAQvF,aACvEiN,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQG,SAAT,KACE9M,EAAApN,EAAAqN,cAAA,WAAM8M,aAAgB,IAAIva,KAAK8F,EAAQ0U,WAAY,IAAIxa,QAEzDwN,EAAApN,EAAAqN,cAAC0M,GAAA,EAAQM,KAAT,KAAe3U,EAAQnI,UAKzB6P,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEC,SAAUuE,EACVpE,OAAQ,SAAArG,GAAA,IAAEsG,EAAFtG,EAAEsG,aAAchO,EAAhB0H,EAAgB1H,WAAY4S,EAA5BlL,EAA4BkL,KAA5B,OACNlN,EAAApN,EAAAqN,cAACiH,GAAA,EAAD,CAAMgB,SAAU,kBAAMI,IAAgBpY,KAAK,kBAAMgd,EAAKC,YACtDnN,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,OACL4N,UAAWa,GACXC,KAAM,EACN5C,YAAY,qBAEd9G,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACE5F,QAASd,EACTyC,QAAQ,YACRqQ,cAAc,OACd1L,KAAK,OACL2L,SAAO,aCZRzN,eA5CmC,SAAAoC,GAAmB,IAAhBtP,EAAgBsP,EAAhBtP,UACnD,OACEsN,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CACE+F,UAAU,SACV7H,MAAO,CAAE4L,OAAQ,QACjB9H,SAAS,MACTjB,WAAS,EACTvD,UAAQ,EACRkD,MAAM,QAEL5Q,EAAU8U,OARb,IAQ2C,IAArB9U,EAAU8U,OAAe,SAAW,SAR1D,UAUAxH,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASgC,UAAQ,GACf5E,EAAApN,EAAAqN,cAACgC,GAAA,EAAD,CAAMqL,SAAO,EAACjJ,SAAO,GAClB3R,EAAUyP,IAAI,SAAAhI,GAAQ,OACrB6F,EAAApN,EAAAqN,cAACK,GAAA,EAAD,CAAMhK,IAAK6D,EAAS7I,SAAUwP,MAAO,CAAEI,SAAU,aAC9C/G,EAAStH,QACRmN,EAAApN,EAAAqN,cAACmD,GAAA,EAAD,CACEtC,MAAO,CAAEI,SAAU,YACnBoC,MAAM,SACNiK,OAAO,SAHT,QAQFvN,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CAAOmB,KAAK,OAAO1B,IAAKzG,EAASnH,OAAS,qBAC1CgN,EAAApN,EAAAqN,cAACK,GAAA,EAAKyC,QAAN,CAAcuJ,cAAc,UAC1BtM,EAAApN,EAAAqN,cAACK,GAAA,EAAK0C,OAAN,CAAaxC,GAAG,MACdR,EAAApN,EAAAqN,cAACkD,EAAA,EAAD,CAAMxC,GAAE,YAAA/R,OAAcuL,EAAS7I,WAC5B6I,EAASpH,cAGboH,EAAS6E,WACVgB,EAAApN,EAAAqN,cAACK,GAAA,EAAKkN,MAAN,CAAY1M,MAAO,CAAEwC,MAAO,WAA5B,sBCID1D,eAjCsD,SAAAoC,GAAe,IAAZyI,EAAYzI,EAAZyI,MAAYlG,EAE9DzE,qBAAWP,IAKdG,cAHXxO,EAJ4EqT,EAI5ErT,SACAwZ,EAL4EnG,EAK5EmG,aACAlR,EAN4E+K,EAM5E/K,eAOJ,OAJAuM,oBAAU,WACN2E,EAAaD,EAAM3Z,OAAOE,KAC3B,CAAC0Z,EAAcD,EAAM3Z,OAAOE,KAE5BwI,EACMwG,EAAApN,EAAAqN,cAACwN,GAAD,CAAkB1Q,QAAQ,wBAE/B7L,EAIA8O,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACAhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAACyN,GAAD,CAAwBxc,SAAUA,IAClC8O,EAAApN,EAAAqN,cAAC0N,GAAD,CAAsBzc,SAAUA,IAChC8O,EAAApN,EAAAqN,cAAC2N,GAAD,OAEF5N,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAAC4N,GAAD,CAAyBnb,UAAWxB,EAASwB,cAV1CsN,EAAApN,EAAAqN,cAAA,kCCZE6N,GAhBE,WACb,OACI9N,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,CAASkE,aAAW,GAChB9G,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQtB,MAAI,GACR1B,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,WADf,0DAIAgF,EAAApN,EAAAqN,cAAC2C,GAAA,EAAQmL,OAAT,KACI/N,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CAAQR,GAAIiB,IAAMd,GAAG,cAAc0M,SAAO,GAA1C,0CCGDzN,eAVQ,WACnB,IADyBoO,EACPlO,qBAAWP,IACuBvD,WAF3BiS,EAAAD,EAElBhR,MAAQF,EAFUmR,EAEVnR,KAAM3M,EAFI8d,EAEJ9d,KAAO8L,EAFH+R,EAEG/R,WAC9B,OACE+D,EAAApN,EAAAqN,cAACiO,GAAA,EAAD,CAAOpR,KAAMA,EAAMqR,QAASlS,EAAYqG,KAAK,QAC3CtC,EAAApN,EAAAqN,cAACiO,GAAA,EAAMnL,QAAP,KAAgB5S,oCCyEPyP,eA7DyB,SAAAoC,GAMlC,IALJpQ,EAKIoQ,EALJpQ,QACAwc,EAIIpM,EAJJoM,cACAhT,EAGI4G,EAHJ5G,QACAvJ,EAEImQ,EAFJnQ,OACAC,EACIkQ,EADJlQ,SAEA,OACEkO,EAAApN,EAAAqN,cAAC2C,GAAA,EAAD,KACE5C,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAACK,GAAA,EAAKuC,MAAN,KACE7C,EAAApN,EAAAqN,cAACK,GAAA,EAAD,KACEN,EAAApN,EAAAqN,cAACK,GAAA,EAAKa,MAAN,CACEC,QAAM,EACNkB,KAAK,QACL1B,IAAKhP,EAAQoB,OAAS,qBAExBgN,EAAApN,EAAAqN,cAACK,GAAA,EAAKyC,QAAN,CAAcuJ,cAAc,UAC1BtM,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQxC,GAAG,MAAM5O,EAAQmB,iBAKjCiN,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAACoO,GAAA,EAAUxL,MAAX,CAAiB4I,OAAQ,GACvBzL,EAAApN,EAAAqN,cAACoO,GAAA,EAAD,CAAWC,MAAM,YAAYjY,MAAOzE,EAAQqN,iBAC5Ce,EAAApN,EAAAqN,cAACoO,GAAA,EAAD,CAAWC,MAAM,YAAYjY,MAAOzE,EAAQ2c,kBAE9CvO,EAAApN,EAAAqN,cAACuO,GAAA,EAAD,OACEJ,GACApO,EAAApN,EAAAqN,cAACwO,GAAA,EAAD,CAAQC,SAAS,QACf1O,EAAApN,EAAAqN,cAACwO,GAAA,EAAO1L,QAAR,CAAgB4L,SAAO,EAAC7N,MAAO,CAAE4D,MAAO,SACtC1E,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEmE,OAAK,EACL7B,MAAM,OACNvG,QAASnL,EAAQoN,UAAY,YAAc,mBAG/CgB,EAAApN,EAAAqN,cAACwO,GAAA,EAAO1L,QAAR,CAAgB6L,QAAM,GACpB5O,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACE5F,QAASA,EACT+J,OAAK,EACL9B,OAAK,EACLC,MAAO1R,EAAQoN,UAAY,MAAQ,QACnCjC,QAASnL,EAAQoN,UAAY,WAAa,SAC1C2C,QACE/P,EAAQoN,UACJ,kBAAMlN,EAASF,EAAQN,WACvB,kBAAMO,EAAOD,EAAQN,kDC/DvCud,GAAiB,CACrBnC,OAAQ,aACR7K,YAAa,OACbiN,aAAc,MACdC,WAAY,OACZpG,UAAW,SACXsD,OAAQ,SAGJ+C,GAAiB,CACrBnN,YAAa,SA8BAoN,GA3B+B,SAAAjN,GAAkB,IAAfkN,EAAelN,EAAfkN,SAEzCC,EAASC,sBAAY,SAAAC,GACzBH,EACEG,EAAclN,IAAI,SAAC5R,GAAD,OAChBgD,OAAO6T,OAAO7W,EAAM,CAClB+e,QAASC,IAAIC,gBAAgBjf,SAIlC,CAAC2e,IAV0DO,EAWRC,aAAY,CAAEP,WAA5DQ,EAXsDF,EAWtDE,aAAcC,EAXwCH,EAWxCG,cAAeC,EAXyBJ,EAWzBI,aAErC,OACE7P,EAAApN,EAAAqN,cAAA,MAAA1M,OAAA6T,OAAA,GACMuI,IADN,CAEE7O,MACE+O,EAAYtc,OAAAwL,GAAA,EAAAxL,CAAA,GAAQsb,GAAmBG,IAAmBH,KAG5D7O,EAAApN,EAAAqN,cAAA,QAAW2P,KACX5P,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,SAASsH,KAAK,SACzBtC,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQjG,QAAQ,2CCEP+S,WApC8B,SAAA9N,GAAgC,IAA7B+N,EAA6B/N,EAA7B+N,SAAUC,EAAmBhO,EAAnBgO,aAClDC,EAAUC,iBAAgB,MAgBhC,OACElQ,EAAApN,EAAAqN,cAACkQ,GAAAvd,EAAD,CACEO,IAAK8c,EACLrP,IAAKoP,EACLlP,MAAO,CAAEmL,OAAQ,IAAKvH,MAAO,QAE7B0L,YAAa,EACbd,QAAQ,eACRe,QAAQ,EACRC,SAAU,EACVC,SAAS,OACTC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,KA5Bc,WAEdV,EAAQ/d,SACsC,qBAAvC+d,EAAQ/d,QAAQ0e,oBAIzBX,GACEA,EAAQ/d,SACR+d,EAAQ/d,QAAQ0e,mBAAmBC,OAAO,SAACC,GACzCf,EAASe,IACR,mBC6CMlR,eAzD6B,SAAAoC,GAA8B,IAA3B5G,EAA2B4G,EAA3B5G,QAAS7J,EAAkByQ,EAAlBzQ,YAAkBmU,EAC9CC,mBAAgB,IAD8BC,EAAArS,OAAA4Q,GAAA,EAAA5Q,CAAAmS,EAAA,GACjEqL,EADiEnL,EAAA,GAC1DsJ,EAD0DtJ,EAAA,GAAAkF,EAE9CnF,mBAAsB,MAFwBoF,EAAAxX,OAAA4Q,GAAA,EAAA5Q,CAAAuX,EAAA,GAEjE9X,EAFiE+X,EAAA,GAE1DgF,EAF0DhF,EAAA,GAUxE,OANAhF,oBAAU,WACR,OAAO,WACLgL,EAAM3a,QAAQ,SAAA7F,GAAI,OAAIgf,IAAIyB,gBAAgBzgB,EAAK+e,cAKjDtP,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQM,MAAM,OAAO2N,KAAG,EAAClU,QAAQ,uBACjCiD,EAAApN,EAAAqN,cAACiR,GAAD,CAAqBhC,SAAUA,KAEjClP,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IACpB1E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQiO,KAAG,EAAC3N,MAAM,OAAOvG,QAAQ,0BAChCgU,EAAMvJ,OAAS,GACdxH,EAAApN,EAAAqN,cAACkR,GAAD,CACEpB,SAAUA,EACVC,aAAce,EAAM,GAAGzB,WAI7BtP,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IACpB1E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQiO,KAAG,EAAC3N,MAAM,OAAOvG,QAAQ,8BAChCgU,EAAMvJ,OAAS,GACdxH,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAAA,OACEiJ,UAAU,cACVpI,MAAO,CAAEsE,UAAW,QAASgM,SAAU,YAEzCpR,EAAApN,EAAAqN,cAACe,EAAA,EAAO6B,MAAR,CAAc4I,OAAQ,GACpBzL,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEC,UAAQ,EACRS,KAAK,QACLtG,QAASA,EACTuG,QAAS,kBAAMpQ,EAAYyB,MAE7BgN,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEU,KAAK,QACL6D,SAAUnK,EACVuG,QAAS,kBAAMuN,EAAS,cCkC3BtP,eArFO,WACpB,IAD0ByR,EACRvR,qBAAWP,IASfI,aAPZ/N,EAHwByf,EAGxBzf,QACAwc,EAJwBiD,EAIxBjD,cACA7c,EALwB8f,EAKxB9f,YACAoN,EANwB0S,EAMxB1S,eACAlN,EAPwB4f,EAOxB5f,aACAC,EARwB2f,EAQxB3f,YACA0J,EATwBiW,EASxBjW,QATwBsK,EAWcC,oBAAS,GAXvBC,EAAArS,OAAA4Q,GAAA,EAAA5Q,CAAAmS,EAAA,GAWnB4L,EAXmB1L,EAAA,GAWL2L,EAXK3L,EAAA,GAAAkF,EAYEnF,wBAA6B1W,GAZ/B8b,EAAAxX,OAAA4Q,GAAA,EAAA5Q,CAAAuX,EAAA,GAYnBhQ,EAZmBiQ,EAAA,GAYXyG,EAZWzG,EAAA,GAAA0G,EAac9L,wBACtC1W,GAdwByiB,EAAAne,OAAA4Q,GAAA,EAAA5Q,CAAAke,EAAA,GAanBE,EAbmBD,EAAA,GAaLE,EAbKF,EAAA,GAqB1B,OACE1R,EAAApN,EAAAqN,cAAC4R,GAAA,EAAIC,KAAL,KACE9R,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,GAAI5D,MAAO,CAAEiR,cAAe,IAC9C/R,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQe,QAAQ,OAAOrC,KAAK,QAAQ3E,QAAQ,WAC3CqR,GACCpO,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEW,QAAS,kBAAM4P,GAAiBD,IAChCvN,QAAQ,QACRV,OAAK,EACLtG,QAASuU,EAAe,SAAW,eAIzCtR,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IACjB4M,EACCtR,EAAApN,EAAAqN,cAAC+R,GAAD,CACEzgB,YArBc,SAACC,GACzBD,EAAYC,GAAOtB,KAAK,kBAAMqhB,GAAgB,MAqBpCnW,QAASuD,IAGXqB,EAAApN,EAAAqN,cAACgS,GAAA,EAAKpP,MAAN,CAAYqP,YAAa,GACtBtgB,GACCA,EAAQgN,OAAOuD,IAAI,SAAA3Q,GAAK,OACtBwO,EAAApN,EAAAqN,cAACgS,GAAA,EAAD,CAAM3b,IAAK9E,EAAMR,IACfgP,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CAAOP,IAAKpP,EAAMxB,MACjBoe,GACCpO,EAAApN,EAAAqN,cAACe,EAAA,EAAO6B,MAAR,CAAcsC,OAAK,EAACsG,OAAQ,GAC1BzL,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEW,QAAS,SAAAmI,GACPrY,EAAaD,GACbggB,EAAU1H,EAAE/O,cAAcC,OAE5BA,KAAMxJ,EAAMR,GACZuU,SAAU/T,EAAMqN,OAChBzD,QAASA,GAAWN,IAAWtJ,EAAMR,GACrCqS,OAAK,EACLpC,UAAQ,EACRlE,QAAQ,SAEViD,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACEhG,KAAMxJ,EAAMR,GACZuU,SAAU/T,EAAMqN,OAChB8C,QAAS,SAACmI,GACRpY,EAAYF,GACZogB,EAAgB9H,EAAE/O,cAAcC,OAElCI,QAASA,GAAWuW,IAAiBngB,EAAMR,GAC3CqS,OAAK,EACL8O,UAAQ,EACRzQ,KAAK,oBCpEzBiG,GAAWC,6BAAkB,CACjC7U,YAAa+U,sBAAW,iBA0CXlI,eAlC2B,SAAAoC,GAAgC,IAA7BrQ,EAA6BqQ,EAA7BrQ,cAAeC,EAAcoQ,EAAdpQ,QAC1D,OACEoO,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEC,SAAUvW,EACVgW,SAAUA,GACVuD,cAAetZ,EACfyW,OAAQ,SAAAnE,GAAA,IAAGoE,EAAHpE,EAAGoE,aAAcE,EAAjBtE,EAAiBsE,QAASC,EAA1BvE,EAA0BuE,SAAUnO,EAApC4J,EAAoC5J,WAApC,OACN0F,EAAApN,EAAAqN,cAACiH,GAAA,EAAD,CAAMgB,SAAUI,EAAczZ,OAAK,GACjCmR,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,cACL4N,UAAWjC,GACXG,YAAY,eACZzQ,MAAOzE,EAASmB,cAElBiN,EAAApN,EAAAqN,cAACgI,GAAA,EAAD,CACEjN,KAAK,MACL4N,UAAWa,GACXC,KAAM,EACN5C,YAAY,MACZzQ,MAAOzE,EAASwgB,MAElBpS,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACE5F,QAASd,EACTyJ,QAAQ,QACRwB,SAAUiD,GAAWC,EACrBxH,UAAQ,EACRlE,QAAQ,yBCJL6C,eAlCY,WACzB,IAD+ByR,EACbvR,qBAAWP,IAC+BI,aAApDhO,EAFuB0f,EAEvB1f,cAAeC,EAFQyf,EAERzf,QAASwc,EAFDiD,EAECjD,cAFD1I,EAGCC,oBAAS,GAHVC,EAAArS,OAAA4Q,GAAA,EAAA5Q,CAAAmS,EAAA,GAGxB2M,EAHwBzM,EAAA,GAGd0M,EAHc1M,EAAA,GAI/B,OACE5F,EAAApN,EAAAqN,cAAC4R,GAAA,EAAIC,KAAL,KACE9R,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACEe,QAAQ,OACRrC,KAAK,OACL3E,QAAO,SAAAnO,OAAWgD,EAASmB,eAE5Bqb,GACCpO,EAAApN,EAAAqN,cAACe,EAAA,EAAD,CACE+C,QAAQ,QACRV,OAAK,EACLtG,QAASsV,EAAW,SAAW,eAC/B1Q,QAAS,kBAAM2Q,GAAaD,OAIlCrS,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IACjB2N,EACCrS,EAAApN,EAAAqN,cAACsS,GAAD,CAAiB5gB,cAAeA,EAAeC,QAASA,IAExDoO,EAAApN,EAAAqN,cAAA,YAAOrO,EAASwgB,UCNbI,GAjBuB,SAAAxQ,GAAe,IAAbpQ,EAAaoQ,EAAbpQ,QACtC,OACEoO,EAAApN,EAAAqN,cAACgS,GAAA,EAAD,CAAMzR,GAAIiB,IAAMd,GAAE,YAAA/R,OAAcgD,EAAQN,WACtC0O,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CAAOP,IAAKhP,EAAQoB,OAAS,qBAC7BgN,EAAApN,EAAAqN,cAACgS,GAAA,EAAKlP,QAAN,KACE/C,EAAApN,EAAAqN,cAACgS,GAAA,EAAKjP,OAAN,KAAcpR,EAAQmB,cAExBiN,EAAApN,EAAAqN,cAACgS,GAAA,EAAKlP,QAAN,CAAc0P,OAAK,GACjBzS,EAAApN,EAAAqN,cAAA,WACED,EAAApN,EAAAqN,cAACsD,GAAA,EAAD,CAAMvI,KAAK,SACVpJ,EAAQqN,eAFX,iBCuBOyT,GAnCW,WACxB,IAD8BrB,EACZvR,qBAAWP,IAMfI,aAJZ/N,EAH4Byf,EAG5Bzf,QACA0M,EAJ4B+S,EAI5B/S,WACAlD,EAL4BiW,EAK5BjW,QACAgD,EAN4BiT,EAM5BjT,UAGF,OACE4B,EAAApN,EAAAqN,cAAC4R,GAAA,EAAIC,KAAL,CAAU1W,QAASA,GACjB4E,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CACEe,QAAQ,OACRrC,KAAK,OACL3E,QACgB,IAAdqB,EAAA,oBAAAxP,OACwBgD,EAASmB,aADjC,UAAAnE,OAEcgD,EAASmB,YAFvB,oBAMNiN,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAACgS,GAAA,EAAKpP,MAAN,CAAYqP,YAAa,GACtB5T,EAAW6D,IAAI,SAAAvQ,GAAO,OACrBoO,EAAApN,EAAAqN,cAAC0S,GAAD,CAAarc,IAAK1E,EAAQN,SAAUM,QAASA,WCvBrDghB,GAAQ,CACZ,CAAEC,SAAU,gBAAiBC,KAAM,CAAExc,IAAK,iBAC1C,CAAEuc,SAAU,cAAeC,KAAM,CAAExc,IAAK,eACxC,CAAEuc,SAAU,UAAWC,KAAM,CAAExc,IAAK,YA2EvBsJ,eAxEO,WACpB,IAD0BoC,EACRlC,qBAAWP,IAMfI,aAJZoT,EAHwB/Q,EAGxB+Q,mBACAnhB,EAJwBoQ,EAIxBpQ,QACA2M,EALwByD,EAKxBzD,kBACAC,EANwBwD,EAMxBxD,eAGFuH,oBAAU,WACRgN,EAAmBnhB,EAASN,WAC3B,CAACyhB,EAAoBnhB,IAqBxB,OACEoO,EAAApN,EAAAqN,cAAC4R,GAAA,EAAIC,KAAL,CAAU1W,QAASmD,GACjByB,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC+C,GAAA,EAAD,CAAQe,QAAQ,OAAOrC,KAAK,WAAW3E,QAAS,gBAElDiD,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC4R,GAAA,EAAD,CACEe,MAAOA,GACPI,KAAM,CAAErP,WAAW,EAAMpC,UAAU,GACnC0R,YAAa,SAACnJ,EAAGxa,GAAJ,OA7BC,SACtBwa,EACAxa,GAEA,IAAI0C,EACJ,OAAQ1C,EAAKmP,aACX,KAAK,EACHzM,EAAY,OACZ,MACF,KAAK,EACHA,EAAY,UACZ,MACF,QACEA,EAAY,SAGhB+gB,EAAmBnhB,EAASN,SAAUU,GAaJkhB,CAAgBpJ,EAAGxa,MAE/C0Q,EAAApN,EAAAqN,cAAA,WACAD,EAAApN,EAAAqN,cAACgS,GAAA,EAAKpP,MAAN,CAAYqP,YAAa,GACtB1T,EAAe2D,IAAI,SAACjR,GAAD,OAClB8O,EAAApN,EAAAqN,cAACgS,GAAA,EAAD,CACEzR,GAAIiB,IACJd,GAAE,eAAA/R,OAAiBsC,EAASF,IAC5BsF,IAAKpF,EAASF,IAEdgP,EAAApN,EAAAqN,cAACkB,EAAA,EAAD,CACEP,IAAG,0BAAAhS,OAA4BsC,EAASqY,SAArC,QACHzI,MAAO,CAAEsE,UAAW,IAAK+N,UAAW,WAEtCnT,EAAApN,EAAAqN,cAACgS,GAAA,EAAKlP,QAAN,KACE/C,EAAApN,EAAAqN,cAACgS,GAAA,EAAKjP,OAAN,CAAa2F,UAAU,UAAUzX,EAAS+R,OAC1CjD,EAAApN,EAAAqN,cAACgS,GAAA,EAAKmB,KAAN,CAAWzK,UAAU,UACnB3I,EAAApN,EAAAqN,cAAA,WAAMuD,aAAO,IAAIhR,KAAKtB,EAASqB,MAAO,WACtCyN,EAAApN,EAAAqN,cAAA,WAAMuD,aAAO,IAAIhR,KAAKtB,EAASqB,MAAO,sBCnEpDqgB,GAAQ,CACZ,CAAEC,SAAU,QAASxK,OAAQ,kBAAMrI,EAAApN,EAAAqN,cAACoT,GAAD,QACnC,CAAER,SAAU,SAAUxK,OAAQ,kBAAMrI,EAAApN,EAAAqN,cAACqT,GAAD,QACpC,CACET,SAAU,aAAcxK,OAAQ,kBAAMrI,EAAApN,EAAAqN,cAACsT,GAAD,QAExC,CAAEV,SAAU,YAAaxK,OAAQ,kBAAMrI,EAAApN,EAAAqN,cAACuT,GAAD,QACvC,CAAEX,SAAU,YAAaxK,OAAQ,kBAAMrI,EAAApN,EAAAqN,cAACuT,GAAD,SAkB1BC,GAX0B,SAAAzR,GAAoB,IAAlB0R,EAAkB1R,EAAlB0R,aACzC,OACE1T,EAAApN,EAAAqN,cAAC4R,GAAA,EAAD,CACEmB,KAAM,CAAE7N,OAAO,EAAMV,UAAU,GAC/BkP,aAAa,QACbf,MAAOA,GACPK,YAAa,SAACnJ,EAAGxa,GAAJ,OAAaokB,EAAapkB,EAAKmP,iBCuBnCmB,eAnCuB,SAAAoC,GAAe,IAAZyI,EAAYzI,EAAZyI,MAAY4G,EACjCvR,qBAAWP,IAUfI,aARZjB,EAHiD2S,EAGjD3S,eACA9M,EAJiDyf,EAIjDzf,QACAgiB,EALiDvC,EAKjDuC,YACA/hB,EANiDwf,EAMjDxf,OACAC,EAPiDuf,EAOjDvf,SACAsc,EARiDiD,EAQjDjD,cACAhT,EATiDiW,EASjDjW,QACAsY,EAViDrC,EAUjDqC,aAOF,OAJA3N,oBAAU,WACR6N,EAAYnJ,EAAM3Z,OAAOQ,WACxB,CAACsiB,EAAanJ,IAEb/L,EAAuBsB,EAAApN,EAAAqN,cAACwN,GAAD,CAAkB1Q,QAAQ,uBAGnDiD,EAAApN,EAAAqN,cAAC+F,GAAA,EAAD,KACEhG,EAAApN,EAAAqN,cAAC+F,GAAA,EAAKC,OAAN,CAAavB,MAAO,IAClB1E,EAAApN,EAAAqN,cAAC4T,GAAD,CACEjiB,QAASA,EACTwc,cAAeA,EACfhT,QAASA,EACTvJ,OAAQA,EACRC,SAAUA,IAEZkO,EAAApN,EAAAqN,cAAC6T,GAAD,CAAgBJ,aAAcA,QCxBvB9T,eAXwB,SAAAoC,GAAqC,IAAxB+R,EAAwB/R,EAAnC4G,UAAyBsB,EAAU3W,OAAA4W,GAAA,EAAA5W,CAAAyO,EAAA,eAEjEgH,EADWlJ,qBAAWP,IACE5F,UAAxBqP,WACP,OACIhJ,EAAApN,EAAAqN,cAAC+T,EAAA,EAADzgB,OAAA6T,OAAA,GACQ8C,EADR,CAEI7B,OAAQ,SAAC4L,GAAD,OAAWjL,EAAahJ,EAAApN,EAAAqN,cAAC8T,EAAcE,GAAWjU,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,CAAUrT,GAAI,YCoDrEuT,eAAWtU,YA7CiB,SAAAoC,GAAkB,IAAfmS,EAAenS,EAAfmS,SACtC/gB,EAAY0M,qBAAWP,IAD8B6U,EAElBhhB,EAAUsE,YAA5C2c,EAFoDD,EAEpDC,aAAc/lB,EAFsC8lB,EAEtC9lB,MAAOkO,EAF+B4X,EAE/B5X,UACrB8X,EAAWlhB,EAAUuG,UAArB2a,QAUP,OARAvO,oBAAU,WACJzX,EACFgmB,IAAUrJ,QAAQ,kBAAMoJ,MAExBA,KAED,CAACC,EAASD,EAAc/lB,IAEtBkO,EAGHwD,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAACsU,GAAD,MACAvU,EAAApN,EAAAqN,cAACuU,EAAA,EAAD,CAAgBtT,SAAS,iBACzBlB,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,CAAOtT,OAAK,EAAC+T,KAAK,IAAI7L,UAAWG,KACjC/I,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,CACES,KAAM,QACNpM,OAAQ,kBACNrI,EAAApN,EAAAqN,cAACgE,EAAA,SAAD,KACEjE,EAAApN,EAAAqN,cAACyU,GAAD,MACA1U,EAAApN,EAAAqN,cAACI,EAAA,EAAD,CAAWS,MAAO,CAAE6D,UAAW,QAC7B3E,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,KACEhU,EAAApN,EAAAqN,cAAC0U,GAAD,CAAcjU,OAAK,EAAC+T,KAAK,cAAc7L,UAAWgM,KAClD5U,EAAApN,EAAAqN,cAAC0U,GAAD,CAAcF,KAAK,kBAAkB7L,UAAWiM,KAChD7U,EAAApN,EAAAqN,cAAC0U,GAAD,CACEre,IAAK6d,EAAS7d,IACdme,KAAM,CAAC,kBAAmB,eAC1B7L,UAAWkM,KAEb9U,EAAApN,EAAAqN,cAAC0U,GAAD,CAAcF,KAAK,qBAAqB7L,UAAWmM,KACnD/U,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,CAAOpL,UAAWkF,YAtBT9N,EAAApN,EAAAqN,cAACwN,GAAD,CAAkB1Q,QAAQ,sBCvB/BiY,QACW,cAA7BzmB,OAAO4lB,SAASc,UAEe,UAA7B1mB,OAAO4lB,SAASc,UAEhB1mB,OAAO4lB,SAASc,SAASxK,MACvB,2DCfN,IAQeyJ,eARK,SAAAlS,GAA8C,IAA3CkT,EAA2ClT,EAA3CkT,SAAsBC,EAAqBnT,EAAjCmS,SAAYgB,SAKzC,OAJApP,oBAAU,WACPxX,OAAO6mB,SAAS,EAAE,IAClB,CAACD,IAEGD,yBCRXG,EAAAC,EAAAC,EAAA,4BAAAC,KAYAC,OAEO,IAAMlmB,GAAUmmB,cAEvBC,IAAStN,OACLrI,EAAApN,EAAAqN,cAAC+T,EAAA,EAAD,CAAQzkB,QAASA,IACbyQ,EAAApN,EAAAqN,cAAC2V,GAAD,KACI5V,EAAApN,EAAAqN,cAAC4V,GAAD,QAGZC,SAASC,eAAe,SFmHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhmB,KAAK,SAAAimB,GACjCA,EAAaC","file":"static/js/main.af8884f5.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity, IActivitiesEnvelope } from '../models/activities';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\nimport { IProfile, IPhoto } from '../models/profile';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n})\r\naxios.interceptors.response.use(undefined, error => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n      toast.error('Network error - make sure API is running!');\r\n    }\r\n    const { status, data, config, headers } = error.response;\r\n    if (status === 404) {\r\n      history.push('/notfound');\r\n    }\r\n    if (status === 401 && headers['www-authenticate'] === 'Bearer error=\"invalid_token\", error_description=\"The token is expired\"') {\r\n      window.localStorage.removeItem('jwt');\r\n      history.push('/')\r\n      toast.info('Your session has expired, please login again')\r\n    }\r\n    if (\r\n      status === 400 &&\r\n      config.method === 'get' &&\r\n      data.errors.hasOwnProperty('id')\r\n    ) {\r\n      history.push('/notfound');\r\n    }\r\n    if (status === 500) {\r\n      toast.error('Server error - check the terminal for more info!');\r\n    }\r\n    throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n// const sleep = (ms: number) => (response: AxiosResponse) => \r\n//     new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post(url, formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        }).then(responseBody)\r\n    }\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> => axios.get('/activities', {params: params}).then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post('/activities', activity),\r\n  update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`)\r\n};\r\n\r\nconst User = {\r\n    current: (): Promise<IUser> => requests.get('/user'),\r\n    login: (user: IUserFormValues): Promise<IUser> => requests.post(`/user/login`, user),\r\n    register: (user: IUserFormValues): Promise<IUser> => requests.post(`/user/register`, user),\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string): Promise<IProfile> => requests.get(`/profiles/${username}`),\r\n    uploadPhoto: (photo: Blob): Promise<IPhoto> => requests.postForm(`/photos`, photo),\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<IProfile>) => requests.put(`/profiles`, profile),\r\n    follow: (username: string) => requests.post(`/profiles/${username}/follow`, {}),\r\n    unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\r\n    listFollowings: (username: string, predicate: string) => requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) => requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\r\n  };\r\n\r\nexport default {\r\n    Activities,\r\n    Profiles,\r\n    User\r\n}","import { IActivity, IAttendee } from \"../../models/activities\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n    // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    // const year = date.getFullYear();\r\n    // const month = date.getMonth() + 1;\r\n    // const day = date.getDate();\r\n    // const dateString = `${year}-${month}-${day}`;\r\n    const dateString = date.toISOString().split('T')[0];\r\n    const timeString = time.toISOString().split('T')[1];\r\n\r\n    return new Date(dateString + ' ' + timeString);\r\n}\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\r\n    activity.date = new Date(activity.date);\r\n    activity.isGoing = activity.attendees.some(\r\n      a => a.username === user.username\r\n    )\r\n    activity.isHost = activity.attendees.some(\r\n      a => a.username === user.username && a.isHost\r\n    )\r\n    return activity;\r\n}\r\n\r\nexport const createAttendee = (user: IUser): IAttendee => {\r\n    return {\r\n        displayName: user.displayName,\r\n        isHost: false,\r\n        username: user.username,\r\n        image: user.image!\r\n    }\r\n}","import { observable, action, computed, runInAction, reaction, toJS } from 'mobx';\r\nimport { SyntheticEvent } from 'react';\r\nimport { IActivity } from '../models/activities';\r\nimport agent from '../api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { RootStore } from './rootStore';\r\nimport { setActivityProps, createAttendee } from '../common/util/util';\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\n\r\nconst LIMIT = 2;\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n      reaction(\r\n        () => this.predicate.keys(),\r\n        () => {\r\n          this.page = 0;\r\n          this.activityRegistry.clear();\r\n          this.loadActivities();\r\n        }\r\n      )\r\n  }\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable activity: IActivity | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target = '';\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n  @observable activityCount = 0;\r\n  @observable page = 0;\r\n  @observable predicate = new Map();\r\n\r\n  @action setPredicate = (predicate: string, value: string | Date) => {\r\n    this.predicate.clear();\r\n    if (predicate !== 'all') {\r\n      this.predicate.set(predicate, value);\r\n    }\r\n  }\r\n\r\n  @computed get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('limit', String(LIMIT));\r\n    params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append(key, value.toISOString())\r\n      } else {\r\n        params.append(key, value)\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  @computed get totalPages() {\r\n    return Math.ceil(this.activityCount / LIMIT);\r\n  }\r\n\r\n  @action setPage = (page: number) => {\r\n    this.page = page;\r\n  }\r\n\r\n  @action createHubConnection = (activityId: string) => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log(this.hubConnection!.state))\r\n      .then(() => {\r\n        console.log('Attempting to join group');\r\n        this.hubConnection!.invoke('AddToGroup', activityId)\r\n      })\r\n      .catch(error => console.log('Error establishing connection: ', error));\r\n\r\n    this.hubConnection.on('ReceiveComment', comment => {\r\n      runInAction(() => {\r\n        this.activity!.comments.push(comment)\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('Send', message => {\r\n      toast.info(message);\r\n    })\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.invoke('RemoveFromGroup', this.activity!.id)\r\n      .then(() => {\r\n        this.hubConnection!.stop();\r\n      })\r\n      .then(() => console.log('Connetion stopped'))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  @action addComment = async (values: any) => {\r\n    values.activityId = this.activity!.id;\r\n    try {\r\n      await this.hubConnection!.invoke('SendComment', values)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } \r\n\r\n  @computed get activitiesByDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getTime() - b.date.getTime()\r\n    );\r\n    return Object.entries(\r\n      sortedActivities.reduce(\r\n        (activities, activity) => {\r\n          const date = activity.date.toISOString().split('T')[0];\r\n          activities[date] = activities[date]\r\n            ? [...activities[date], activity]\r\n            : [activity];\r\n          return activities;\r\n        },\r\n        {} as { [key: string]: IActivity[] }\r\n      )\r\n    );\r\n  }\r\n\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\r\n      const {activities, activityCount} = activitiesEnvelope;\r\n      runInAction('loading activities', () => {\r\n        activities.forEach(activity => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n        });\r\n        this.activityCount = activityCount;\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction('load activities error', () => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.activity = activity;\r\n      return toJS(activity);\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        runInAction('getting activity', () => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activity = activity;\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction('get activity error', () => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n\r\n  getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const attendee = createAttendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.comments = [];\r\n      activity.isHost = true;\r\n      runInAction('create activity', () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction('create activity error', () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error('Problem submitting data');\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction('editing activity', () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.activity = activity;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction('edit activity error', () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error('Problem submitting data');\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction('deleting activity', () => {\r\n        this.activityRegistry.delete(id);\r\n        this.submitting = false;\r\n        this.target = '';\r\n      });\r\n    } catch (error) {\r\n      runInAction('delete activity error', () => {\r\n        this.submitting = false;\r\n        this.target = '';\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action attendActivity = async () => {\r\n    const attendee = createAttendee(this.rootStore.userStore.user!);\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error('Problem signing up to activity');\r\n    }\r\n  };\r\n\r\n  @action cancelAttendance = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.unattend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            a => a.username !== this.rootStore.userStore.user!.username\r\n          );\r\n          this.activity.isGoing = false;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error('Problem cancelling attendance');\r\n    }\r\n  };\r\n}\r\n","import { observable, computed, action, runInAction } from 'mobx';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\nimport agent from '../api/agent';\r\nimport { RootStore } from './rootStore';\r\nimport { history } from '../..';\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.login(values);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push('/activities');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.register(values);\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push('/activities')\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await agent.User.current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore){\r\n        this.rootStore = rootStore;\r\n\r\n        reaction(() => this.token,\r\n        token => {\r\n            if(token) {\r\n                window.localStorage.setItem('jwt', token);\r\n            } else {\r\n                window.localStorage.removeItem('jwt');\r\n            }\r\n        });\r\n    }\r\n\r\n    @observable token: string | null = window.localStorage.getItem('jwt');\r\n    @observable appLoaded = false;\r\n\r\n    @action setToken = (token: string | null) => {\r\n        window.localStorage.setItem('jwt', token!);\r\n        this.token = token;\r\n    };\r\n\r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable.shallow modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n    \r\n    @action openModal = (content: any) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    @action closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { RootStore } from './rootStore';\r\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\r\nimport { IProfile, IPhoto, IUserActivity } from '../models/profile';\r\nimport agent from '../api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n        () => this.activeTab,\r\n        activeTab => {\r\n            if (activeTab === 3 || activeTab === 4) {\r\n                const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                this.loadFollowings(predicate)\r\n            } else {\r\n                this.followings = [];\r\n            }\r\n        }\r\n    )\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n  @observable userActivities: IUserActivity[] = [];\r\n  @observable loadingActivities = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading activities')\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  @action setActiveTab = (activeIndex: number) => {\r\n      this.activeTab = activeIndex;\r\n  } \r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploadingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Problem uploading photo');\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find(a => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find(a => a.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem setting photo as main');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          a => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem deleting the photo');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName !== this.rootStore.userStore.user!.displayName\r\n        ) {\r\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem updating profile');\r\n    }\r\n  };\r\n\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem following user');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem unfollowing user');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n          this.followings = profiles;\r\n          this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading followings');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { createContext } from 'react';\r\nimport { configure } from 'mobx';\r\nimport ActivityStore from './activityStore';\r\nimport UserStore from './userStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport ProfileStore from './profileStore';\r\n\r\nconfigure({enforceActions: 'always'});\r\n\r\nexport class RootStore {\r\n    activityStore: ActivityStore;\r\n    userStore: UserStore;\r\n    commonStore: CommonStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    \r\n    constructor() {\r\n        this.activityStore = new ActivityStore(this);\r\n        this.userStore = new UserStore(this);\r\n        this.commonStore = new CommonStore(this);\r\n        this.modalStore = new ModalStore(this);\r\n        this.profileStore = new ProfileStore(this);\r\n    }\r\n};\r\n\r\n\r\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from 'react';\r\nimport { Menu, Container, Button, Dropdown, Image } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, logout } = rootStore.userStore;\r\n  return (\r\n    <Menu fixed='top' inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to='/'>\r\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name='Activities' as={NavLink} to='/activities' />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to='/createActivity'\r\n            positive\r\n            content='Create Activity'\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position='right'>\r\n            <Image avatar spaced='right' src={user.image || '/assets/user.png'} />\r\n            <Dropdown pointing='top left' text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/${user.username}`}\r\n                  text='My profile'\r\n                  icon='user'\r\n                />\r\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import React from 'react';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { IAttendee } from '../../../app/models/activities';\n\ninterface IProps {\n  attendees: IAttendee[];\n}\n\nconst styles = {\n  borderColor: 'orange',\n  borderWidth: 2\n}\n\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <List.Item key={attendee.username}>\n          <Popup\n            header={attendee.displayName}\n            trigger={\n              <Image\n                size='mini'\n                circular\n                src={attendee.image || '/assets/user.png'}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            }\n          />\n        </List.Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ActivityListItemAttendees;\n","import React from 'react';\r\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IActivity } from '../../../app/models/activities';\r\nimport { format } from 'date-fns';\r\nimport ActivityListItemAttendees from './ActivityListItemAttendees';\r\n\r\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size='tiny'\r\n              circular\r\n              src={host.image || '/assets/user.png'}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by\r\n                <Link to={`/profile/${host.username}`}> {host.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color='orange'\r\n                    content='You are hosting this activity'\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color='green'\r\n                    content='You are going to this activity'\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name='clock' /> {format(activity.date, 'h:mm a')}\r\n        <Icon name='marker' /> {activity.venue}, {activity.city}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated='right'\r\n          content='View'\r\n          color='blue'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import React, { useContext, Fragment } from 'react'\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityListItem from './ActivityListItem';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport {format} from 'date-fns';\r\n\r\nconst ActivityList: React.FC = () => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activitiesByDate } = rootStore.activityStore;\r\n  \r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size='large' color='blue'>\r\n          {format(new Date(group), 'eeee do MMMM')}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map(activity => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n\r\n","import React, { Fragment, useContext } from 'react';\nimport { Menu, Header } from 'semantic-ui-react';\nimport { Calendar } from 'react-widgets';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityFilters = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { predicate, setPredicate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\n        <Header icon={'filter'} attached color={'teal'} content={'Filters'} />\n        <Menu.Item\n          active={predicate.size === 0}\n          onClick={() => setPredicate('all', 'true')}\n          color={'blue'}\n          name={'all'}\n          content={'All Activities'}\n        />\n        <Menu.Item\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n          color={'blue'}\n          name={'username'}\n          content={\"I'm Going\"}\n        />\n        <Menu.Item\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n          color={'blue'}\n          name={'host'}\n          content={\"I'm hosting\"}\n        />\n      </Menu>\n      <Header\n        icon={'calendar'}\n        attached\n        color={'teal'}\n        content={'Select Date'}\n      />\n      <Calendar\n        onChange={date => setPredicate('startDate', date!)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\nconst ActivityListItemPlaceholder = () => {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 50 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport ActivityList from './ActivityList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivities,\r\n    loadingInitial,\r\n    setPage,\r\n    page,\r\n    totalPages\r\n  } = rootStore.activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && page === 0 ? (\r\n          <ActivityListItemPlaceholder />\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && page + 1 < totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color='red'>\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface IProps {\r\n  error: AxiosResponse;\r\n  text?: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\r\n  return (\r\n    <Message error>\r\n      <Message.Header>{error.statusText}</Message.Header>\r\n      {error.data && Object.keys(error.data).length > 0 && (\r\n        <Message.List>\r\n          {Object.values(error.data).flat().map((err, i) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n      {text && <Message.Content content={text} />}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\n\nconst validate = combineValidators({\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst LoginForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { login } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        login(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Login to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n              text='Invalid email or password'\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Login'\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default LoginForm;\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\n\nconst validate = combineValidators({\n  username: isRequired('Username'),\n  displayName: isRequired('DisplayName'),\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst RegisterForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { register } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        register(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Sign up to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='username' component={TextInput} placeholder='Username' />\n          <Field\n            name='displayName'\n            component={TextInput}\n            placeholder='Display Name'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Register'\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default RegisterForm;\n","import React, { useContext, Fragment } from 'react'\r\nimport { Container, Segment, Header, Image, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoginForm from '../user/LoginForm';\r\nimport RegisterForm from '../user/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {isLoggedIn, user} = rootStore.userStore;\r\n    const {openModal} = rootStore.modalStore;\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                <Image\r\n                    size='massive'\r\n                    src='/assets/logo.png'\r\n                    alt='logo'\r\n                    style={{ marginBottom: 12 }}\r\n                />\r\n                Reactivities\r\n                </Header>\r\n                {isLoggedIn && user && token ? (\r\n                    <Fragment>\r\n                        <Header as='h2' inverted content={`Welcome back ${user.displayName}`} />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                        Go to activities!\r\n                        </Button>\r\n                    </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Header as='h2' inverted content={`Welcome to Reactivities`} />\r\n                            <Button onClick={() => openModal(<LoginForm />)} size='huge' inverted>\r\n                                Login\r\n                            </Button>\r\n                            <Button onClick={() => openModal(<RegisterForm />)} size='huge' inverted>\r\n                                Register\r\n                            </Button>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </Container>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface IActivitiesEnvelope {\r\n  activities: IActivity[];\r\n  activityCount: number;\r\n}\r\n\r\nexport interface IActivity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  date: Date;\r\n  city: string;\r\n  venue: string;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  attendees: IAttendee[];\r\n  comments: IComment[];\r\n}\r\n\r\nexport interface IComment {\r\n  id: string;\r\n  createdAt: Date;\r\n  body: string;\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial<IActivity> {\r\n  time?: Date;\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date?: Date = undefined;\r\n  time?: Date = undefined;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(init?: IActivityFormValues) {\r\n    if (init && init.date) {\r\n      init.time = init.date;\r\n    }\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IAttendee {\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n  isHost: boolean;\r\n  following?: boolean;\r\n}\r\n","import React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextAreaInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  rows,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <textarea rows={rows} {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color='red'>\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextAreaInput;\r\n","import React from 'react'\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst SelectInput: React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    options,\r\n    placeholder,\r\n    meta: { touched, error }\r\n  }) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <Select \r\n            value={input.value}\r\n            onChange={(e, data) => input.onChange(data.value)}\r\n            placeholder={placeholder}\r\n            options={options}\r\n        />\r\n        {touched && error && (\r\n          <Label basic color='red'>\r\n            {error}\r\n          </Label>\r\n        )}\r\n      </Form.Field>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","export const category = [\r\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\r\n  { key: 'culture', text: 'Culture', value: 'culture' },\r\n  { key: 'film', text: 'Film', value: 'film' },\r\n  { key: 'food', text: 'Food', value: 'food' },\r\n  { key: 'music', text: 'Music', value: 'music' },\r\n  { key: 'travel', text: 'Travel', value: 'travel' }\r\n];","import React from 'react'\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\nimport {DateTimePicker} from 'react-widgets';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<any, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst DateInput: React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    placeholder,\r\n    date = false,\r\n    time = false,\r\n    meta: { touched, error },\r\n    ...rest\r\n  }) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <DateTimePicker \r\n            placeholder={placeholder}\r\n            value={input.value || null}\r\n            onChange={input.onChange}\r\n            onBlur={input.onBlur}\r\n            onKeyDown={(e) => e.preventDefault()}\r\n            date={date}\r\n            time={time}\r\n            {...rest}\r\n        />\r\n        {touched && error && (\r\n          <Label basic color='red'>\r\n            {error}\r\n          </Label>\r\n        )}\r\n      </Form.Field>\r\n    )\r\n}\r\n\r\nexport default DateInput\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\r\nimport { ActivityFormValues } from '../../../app/models/activities';\r\nimport {v4 as uuid } from 'uuid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport {category} from '../../../app/common/options/categoryOptions';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport {combineDateAndTime} from '../../../app/common/util/util';\r\nimport {combineValidators, isRequired, composeValidators, hasLengthGreaterThan} from 'revalidate';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: 'The event title is required' }),\r\n  category: isRequired('Category'),\r\n  description: composeValidators(\r\n    isRequired('Description'),\r\n    hasLengthGreaterThan(4)({\r\n      message: 'Description needs to be at least 5 characters'\r\n    })\r\n  )(),\r\n  city: isRequired('City'),\r\n  venue: isRequired('Venue'),\r\n  date: isRequired('Date'),\r\n  time: isRequired('Time')\r\n});\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n    match,\r\n    history\r\n  }) => {\r\n \r\n    const rootStore = useContext(RootStoreContext);\r\n    const {\r\n      submitting,\r\n      loadActivity,\r\n      createActivity,\r\n      editActivity\r\n    } = rootStore.activityStore;\r\n  \r\n    const [activity, setActivity] = useState(new ActivityFormValues());\r\n    const [loading, setLoading] = useState(false);\r\n\r\n      useEffect(() => {\r\n      if (match.params.id) {\r\n        setLoading(true);\r\n        loadActivity(match.params.id).then(\r\n          (activity) => setActivity(new ActivityFormValues(activity))\r\n        ).finally(() => setLoading(false));\r\n      }\r\n    }, [\r\n      loadActivity,\r\n      match.params.id,\r\n    ]);\r\n  \r\n    const handleFinalFormSubmit = (values: any) => {\r\n      const dateAndTime = combineDateAndTime(values.date, values.time);\r\n      const {date, time, ...activity} = values;\r\n      activity.date = dateAndTime\r\n       if (!activity.id) {\r\n        let newActivity = {\r\n          ...activity,\r\n          id: uuid()\r\n        };\r\n        createActivity(newActivity);\r\n      } else {\r\n        editActivity(activity);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <Segment clearing>\r\n            <FinalForm\r\n              validate={validate}\r\n              initialValues={activity}\r\n              onSubmit={handleFinalFormSubmit}\r\n              render={({handleSubmit, invalid, pristine}) => (\r\n             <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name='title'\r\n                  placeholder='Title'\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                  />\r\n                <Field\r\n                  name='description'\r\n                  placeholder='Description'\r\n                  value={activity.description}\r\n                  rows={3}\r\n                  component={TextAreaInput}\r\n                />\r\n              <Field\r\n                component={SelectInput}\r\n                options={category}\r\n                name='category'\r\n                placeholder='Category'\r\n                value={activity.category}\r\n              />\r\n\r\n              <Form.Group widths='equal'>\r\n                  <Field\r\n                    component={DateInput}\r\n                    name='date'\r\n                    date={true}\r\n                    placeholder='Date'\r\n                    value={activity.date}\r\n                  />\r\n                  <Field\r\n                    component={DateInput}\r\n                    name='time'\r\n                    time={true}\r\n                    placeholder='Time'\r\n                    value={activity.time}\r\n                  />\r\n                </Form.Group>\r\n\r\n              <Field\r\n                component={TextInput}\r\n                name='city'\r\n                placeholder='City'\r\n                value={activity.city}\r\n              />\r\n              <Field\r\n                component={TextInput}\r\n                name='venue'\r\n                placeholder='Venue'\r\n                value={activity.venue}\r\n              />\r\n              <Button\r\n                loading={submitting}\r\n                floated='right'\r\n                positive\r\n                disabled={loading || invalid || pristine}\r\n                type='submit'\r\n                content='Submit'\r\n              />\r\n              <Button\r\n                onClick={\r\n                  activity.id\r\n                    ? () => history.push(`/activities/${activity.id}`)\r\n                    : () => history.push('/activities')\r\n                }\r\n                floated='right'\r\n                disabled={loading}\r\n                type='button'\r\n                content='Cancel'\r\n              />\r\n            </Form>\r\n           )}\r\n          />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  };\r\n  \r\n  export default observer(ActivityForm);","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nconst LoadingComponent: React.FC<{ inverted?: boolean, content?: string}> = ({ \r\n    inverted = true, \r\n    content\r\n}) => {\r\n    return (\r\n        <Dimmer active inverted={inverted} >\r\n            <Loader content={content} />\r\n        </Dimmer>  \r\n    )\r\n}\r\n\r\nexport default LoadingComponent\r\n","import React, { useContext } from 'react';\r\nimport { Segment, Item, Header, Button, Image } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activities';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\n\r\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\r\n  activity\r\n}) => {\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached='top' style={{ padding: '0' }}>\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size='huge'\r\n                  content={activity.title}\r\n                  style={{ color: 'white' }}\r\n                />\r\n                <p>{format(activity.date, 'eeee do MMMM')}</p>\r\n                <p>\r\n                  Hosted by{' '}\r\n                  <Link to={`/profile/${host.username}`}>\r\n                    <strong>{host.displayName}</strong>\r\n                  </Link>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached='bottom'>\r\n        {activity.isHost ? (\r\n          <Button\r\n            as={Link}\r\n            to={`/manage/${activity.id}`}\r\n            color='orange'\r\n            floated='right'\r\n          >\r\n            Manage Event\r\n          </Button>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={cancelAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button loading={loading} onClick={attendActivity} color='teal'>\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activities';\r\nimport { format } from 'date-fns';\r\n\r\nconst ActivityDetailedInfo: React.FC<{activity: IActivity}> = ({activity}) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached='top'>\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size='large' color='teal' name='info' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='calendar' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date, 'eeee do MMMM')} at {format(activity.date, 'h:mm a')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='marker' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityDetailedInfo;\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Segment, Header, Form, Button, Comment } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport {Form as FinalForm, Field} from 'react-final-form';\r\nimport { Link } from 'react-router-dom';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {formatDistance} from 'date-fns';\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    activity\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    createHubConnection(activity!.id);\r\n    return () => {\r\n      stopHubConnection();\r\n    }\r\n  }, [createHubConnection, stopHubConnection, activity]);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign='center'\r\n        attached='top'\r\n        inverted\r\n        color='teal'\r\n        style={{ border: 'none' }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity && activity.comments && activity.comments.map((comment) => (\r\n          <Comment key={comment.id}>\r\n          <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n          <Comment.Content>\r\n            <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n            <Comment.Metadata>\r\n              <div>{formatDistance( new Date(comment.createdAt), new Date())}</div>\r\n            </Comment.Metadata>\r\n            <Comment.Text>{comment.body}</Comment.Text>\r\n          </Comment.Content>\r\n        </Comment>\r\n          ))}\r\n\r\n          <FinalForm \r\n            onSubmit={addComment}\r\n            render={({handleSubmit, submitting, form}) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n              <Field \r\n                name='body'\r\n                component={TextAreaInput}\r\n                rows={2}\r\n                placeholder='Add your comment'\r\n              />\r\n              <Button\r\n                loading={submitting}\r\n                content='Add Reply'\r\n                labelPosition='left'\r\n                icon='edit'\r\n                primary\r\n              />\r\n            </Form>\r\n            )}\r\n          />\r\n\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, List, Item, Label, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IAttendee } from '../../../app/models/activities';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign='center'\r\n        style={{ border: 'none' }}\r\n        attached='top'\r\n        secondary\r\n        inverted\r\n        color='teal'\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item key={attendee.username} style={{ position: 'relative' }}>\r\n              {attendee.isHost && (\r\n                <Label\r\n                  style={{ position: 'absolute' }}\r\n                  color='orange'\r\n                  ribbon='right'\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Item.Header as='h3'>\r\n                  <Link to={`/profile/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following &&\r\n                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedSidebar);","import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({ match }) => {\r\n  \r\n    const rootStore = useContext(RootStoreContext);\r\n    const { \r\n        activity, \r\n        loadActivity, \r\n        loadingInitial\r\n     } = rootStore.activityStore;\r\n\r\n    useEffect(() => {\r\n        loadActivity(match.params.id)\r\n    }, [loadActivity, match.params.id]);\r\n\r\n    if(loadingInitial) \r\n      return <LoadingComponent content='Loading activity...' />\r\n\r\n    if(!activity)\r\n      return <h2>Activity not found</h2>\r\n\r\n    return (\r\n        <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailedHeader activity={activity} />\r\n          <ActivityDetailedInfo activity={activity} />\r\n          <ActivityDetailedChat />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailedSidebar attendees={activity.attendees}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetails);\r\n","import React from 'react';\r\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere but couldn't find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to Activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useContext } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ModalContainer = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {modal: {open, body}, closeModal} = rootStore.modalStore;\r\n  return (\r\n    <Modal open={open} onClose={closeModal} size='mini'>\r\n      <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);","import React from 'react';\nimport {\n  Segment,\n  Item,\n  Header,\n  Button,\n  Grid,\n  Statistic,\n  Divider,\n  Reveal\n} from 'semantic-ui-react';\nimport { IProfile } from '../../app/models/profile';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps {\n  profile: IProfile;\n  isCurrentUser: boolean;\n  loading: boolean;\n  follow: (username: string) => void;\n  unfollow: (username: string) => void;\n}\n\nconst ProfileHeader: React.FC<IProps> = ({\n  profile,\n  isCurrentUser,\n  loading,\n  follow,\n  unfollow\n}) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size='small'\n                src={profile.image || '/assets/user.png'}\n              />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1'>{profile.displayName}</Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          {!isCurrentUser && (\n            <Reveal animated='move'>\n              <Reveal.Content visible style={{ width: '100%' }}>\n                <Button\n                  fluid\n                  color='teal'\n                  content={profile.following ? 'Following' : 'Not following'}\n                />\n              </Reveal.Content>\n              <Reveal.Content hidden>\n                <Button\n                  loading={loading}\n                  fluid\n                  basic\n                  color={profile.following ? 'red' : 'green'}\n                  content={profile.following ? 'Unfollow' : 'Follow'}\n                  onClick={\n                    profile.following\n                      ? () => unfollow(profile.username)\n                      : () => follow(profile.username)\n                  }\n                />\n              </Reveal.Content>\n            </Reveal>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Icon, Header } from 'semantic-ui-react';\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: 'dashed 3px',\r\n  borderColor: '#eee',\r\n  borderRadius: '5px',\r\n  paddingTop: '30px',\r\n  textAlign: 'center' as 'center',\r\n  height: '200px'\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: 'green'\r\n};\r\n\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useRef } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport './cropper.css';\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n\r\n  const cropImage = () => {\r\n    if (\r\n      cropper.current &&\r\n      typeof cropper.current.getCroppedCanvas() === 'undefined'\r\n    ) {\r\n      return;\r\n    }\r\n    cropper &&\r\n      cropper.current &&\r\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        setImage(blob);\r\n      }, 'image/jpeg');\r\n  };\r\n\r\n  return (\r\n    <Cropper\r\n      ref={cropper}\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      // Cropper.js options\r\n      aspectRatio={1 / 1}\r\n      preview='.img-preview'\r\n      guides={false}\r\n      viewMode={1}\r\n      dragMode='move'\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Header, Grid, Button } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<IProps> = ({ loading, uploadPhoto }) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color='teal' sub content='Step 1 - Add Photo' />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 2 - Resize image' />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className='img-preview'\r\n                style={{ minHeight: '200px', overflow: 'hidden' }}\r\n              />\r\n              <Button.Group widths={2}>\r\n                <Button\r\n                  positive\r\n                  icon='check'\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                <Button\r\n                  icon='close'\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from 'react';\nimport { Tab, Header, Card, Image, Button, Grid } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    isCurrentUser,\n    uploadPhoto,\n    uploadingPhoto,\n    setMainPhoto,\n    deletePhoto,\n    loading\n  } = rootStore.profileStore;\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState<string | undefined>(undefined);\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\n    undefined\n  );\n\n  const handleUploadImage = (photo: Blob) => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\n          <Header floated='left' icon='image' content='Photos' />\n          {isCurrentUser && (\n            <Button\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n              floated='right'\n              basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handleUploadImage}\n              loading={uploadingPhoto}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile &&\n                profile.photos.map(photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url} />\n                    {isCurrentUser && (\n                      <Button.Group fluid widths={2}>\n                        <Button\n                          onClick={e => {\n                            setMainPhoto(photo);\n                            setTarget(e.currentTarget.name);\n                          }}\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          loading={loading && target === photo.id}\n                          basic\n                          positive\n                          content='Main'\n                        />\n                        <Button\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          onClick={(e) => {\n                            deletePhoto(photo);\n                            setDeleteTarget(e.currentTarget.name)\n                          }}\n                          loading={loading && deleteTarget === photo.id}\n                          basic\n                          negative\n                          icon='trash'\n                        />\n                      </Button.Group>\n                    )}\n                  </Card>\n                ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import React from 'react';\nimport { IProfile } from '../../app/models/profile';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { observer } from 'mobx-react-lite';\nimport { combineValidators, isRequired } from 'revalidate';\nimport { Form, Button } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport TextAreaInput from '../../app/common/form/TextAreaInput';\n\nconst validate = combineValidators({\n  displayName: isRequired('displayName')\n});\n\ninterface IProps {\n  updateProfile: (profile: Partial<IProfile>) => void;\n  profile: IProfile;\n}\n\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\n  return (\n    <FinalForm\n      onSubmit={updateProfile}\n      validate={validate}\n      initialValues={profile!}\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Field\n            name='displayName'\n            component={TextInput}\n            placeholder='Display Name'\n            value={profile!.displayName}\n          />\n          <Field\n            name='bio'\n            component={TextAreaInput}\n            rows={3}\n            placeholder='Bio'\n            value={profile!.bio}\n          />\n          <Button \n            loading={submitting}\n            floated='right'\n            disabled={invalid || pristine}\n            positive\n            content='Update profile'\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default observer(ProfileEditForm);\n","import React, { useContext, useState } from 'react';\nimport { Tab, Grid, Header, Button } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileEditForm from './ProfileEditForm';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfileDescription = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { updateProfile, profile, isCurrentUser } = rootStore.profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={`About ${profile!.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {editMode ? (\n            <ProfileEditForm updateProfile={updateProfile} profile={profile!} />\n          ) : (\n            <span>{profile!.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileDescription);\n","import React from 'react';\nimport { Card, Image, Icon} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IProfile } from '../../app/models/profile';\n\ninterface IProps {\n    profile: IProfile\n}\n\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\n  return (\n    <Card as={Link} to={`/profile/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div>\n          <Icon name='user' />\n          {profile.followersCount} Followers\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ProfileCard;\n","import React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loading,\n    activeTab\n  } = rootStore.profileStore;\n\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile!.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={5}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default ProfileFollowings;\n","import React, { useEffect, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IUserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { RootStoreContext } from '../../app/stores/rootStore';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\n];\n\nconst ProfileEvents = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities\n  } = rootStore.profileStore!;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    data: TabProps\n  ) => {\n    let predicate;\n    switch (data.activeIndex) {\n      case 1:\n        predicate = 'past';\n        break;\n      case 2:\n        predicate = 'hosting';\n        break;\n      default:\n        predicate = 'future';\n        break;\n    }\n    loadUserActivities(profile!.username, predicate);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: IUserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileEvents);","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport ProfilePhotos from './ProfilePhotos';\nimport ProfileDescription from './ProfileDescription';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfileActivities from './ProfileActivities';\n\nconst panes = [\n  { menuItem: 'About', render: () => <ProfileDescription /> },\n  { menuItem: 'Photos', render: () => <ProfilePhotos /> },\n  {\n    menuItem: 'Activities', render: () => <ProfileActivities />\n  },\n  { menuItem: 'Followers', render: () => <ProfileFollowings /> },\n  { menuItem: 'Following', render: () => <ProfileFollowings /> }\n];\n\ninterface IProps {\n    setActiveTab: (activeIndex: any) => void;\n}\n\nconst ProfileContent: React.FC<IProps> = ({setActiveTab}) => {\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\n    />\n  );\n};\n\nexport default ProfileContent;\n","import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { RouteComponentProps } from 'react-router';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\ninterface RouteParams {\n  username: string;\n}\n\ninterface IProps extends RouteComponentProps<RouteParams> {}\n\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile,\n    follow,\n    unfollow,\n    isCurrentUser,\n    loading,\n    setActiveTab\n  } = rootStore.profileStore;\n\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        <ProfileHeader\n          profile={profile!}\n          isCurrentUser={isCurrentUser}\n          loading={loading}\n          follow={follow}\n          unfollow={unfollow}\n        />\n        <ProfileContent setActiveTab={setActiveTab} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n","import React, { useContext } from 'react'\r\nimport { RouteProps, RouteComponentProps, Redirect, Route } from 'react-router-dom'\r\nimport { RootStoreContext } from '../stores/rootStore'\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>>\r\n};\r\n\r\nconst PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {isLoggedIn} = rootStore.userStore;\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to={'/'} />}\r\n        />\r\n    );\r\n};\r\n\r\nexport default observer(PrivateRoute);","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboad';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  RouteComponentProps,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport NotFound from './NotFound';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\r\n  const {getUser} = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUser().finally(() => setAppLoaded())\r\n    } else {\r\n      setAppLoaded();\r\n    }\r\n  }, [getUser, setAppLoaded, token])\r\n\r\n  if (!appLoaded) return <LoadingComponent content='Loading app...' />\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalContainer />\r\n      <ToastContainer position='bottom-right' />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <Fragment>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\r\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={['/createActivity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path='/profile/:username' component={ProfilePage} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </Fragment>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(observer(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = ({ children, location: { pathname }}: any) => {\r\n    useEffect(() => {\r\n       window.scrollTo(0,0);\r\n    }, [pathname])\r\n\r\n    return children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport {createBrowserHistory} from 'history';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\nimport dateFnsLocalizer from 'react-widgets-date-fns';\r\n\r\ndateFnsLocalizer();\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Router history={history} >\r\n        <ScrollToTop>\r\n            <App />\r\n        </ScrollToTop>\r\n    </Router>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}